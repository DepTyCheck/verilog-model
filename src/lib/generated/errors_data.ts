// This file is auto-generated by scripts/gen_errors_data.js
// Do not edit manually

import type { FoundError } from '$lib/core';

export const allFoundErrors: FoundError[] = [
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "array_needs_an_array_index_here",
    "title": "Array needs an array index here",
    "short_desc": null,
    "examples": [
      {
        "id": "array_needs_an_array_index_here_v1",
        "first_found": "2025-04-07T00:00:00.000Z",
        "minified_example": "module a(output o1 [0:0], input i1 [0:0]);\n  assign o1 = i1;\nendmodule: a\n",
        "minified_error": null,
        "full_error": null,
        "full_example": "// Seed: 9805389099535758122,11656690212121374065\n\nmodule pwamcpunge\n  ( output bit [3:0] yylmdiec\n  , output real b [3:4]\n  , output bit [1:4] xkmgn\n  , output bit [4:0] fld\n  , input logic taqfhggt [3:1][1:4]\n  , input wire hm [3:2]\n  );\n\n\n  not pssd(yylmdiec, yylmdiec);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign fld = 'b10001;\n  assign b = '{'b0,'bx};\n  assign xkmgn = 'b0111;\nendmodule: pwamcpunge\n\nmodule jfliepplh\n  (output logic [1:1] whoywxhzh, output logic [0:1][0:3] dz, output uwire pm [2:0][0:3], output logic qfykkdy [3:2]);\n\n\n  nand tl(euidwkrlpl, idgw, nfwo);\n  and ihsncrglpm(xyk, xyk, euidwkrlpl);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign nfwo = 'b0;\n  assign idgw = 'b1;\n  assign qfykkdy = '{'bx,'b1};\n  assign dz = 'bzzx1zz1z;\n  assign xyk = 'b0;\n  assign xyk = 'b0;\n  assign xyk = 'bz;\nendmodule: jfliepplh\n\nmodule slmdxhpsir\n  ( output bit [4:2] ffeziq [0:0]\n  , input bit [2:4] b [1:1]\n  , input logic [1:3][1:1] hacbtll\n  , input logic [4:2] ngjmnvtkzx [0:2]\n  , input integer xi [1:2][0:0]\n  );\n\n\n  nand epcoibz(fjrbwrhbj, alnqbdq, lfyk);\n  nand ysyr(em, xfyxjybzr, fjrbwrhbj);\n\n  // Top inputs -> top outputs assigns\n  assign ffeziq = b;\n\n  // Assigns\n  assign lfyk = 'bx;\n  assign alnqbdq = 'b0;\n  assign fjrbwrhbj = 'b0;\n  assign fjrbwrhbj = 'bx;\nendmodule: slmdxhpsir\n\nmodule ptfqv\n  (output wire uvgwd [4:1], output bit [1:2][3:4][2:4] qbj, output logic [3:4] ybmjrducq, input integer mhhd);\n\n  uwire bdizhyz [2:0][0:3];\n  logic muo [3:2];\n\n  jfliepplh fwbn(.whoywxhzh(f), .dz(xwgcbuc), .pm(bdizhyz), .qfykkdy(muo));\n\n  // Top inputs -> top outputs assigns\n  assign ybmjrducq = mhhd;\n\n  // Assigns\n  assign uvgwd = '{'b0,'b1,'b0,'b0};\n  assign qbj = 'b101000010000;\n  assign xwgcbuc = 'b0xxxz1zz;\n  assign xwgcbuc = 'b10x1z01x;\nendmodule: ptfqv\n\n\n\n// Seed after: 9086973419989400924,11656690212121374065\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "cannot_be_driven_with_non_default_strength",
    "title": "Cannot be driven with non default strength",
    "short_desc": null,
    "examples": [
      {
        "id": "cannot_be_driven_with_non_default_strength_v1",
        "first_found": "2025-07-02T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: variable lbrkx; cannot be driven by a primitive or continuous assignment with non-default strength.\n",
        "full_example": "// Seed: 12348576575492672505,10002677915001445999\n\nmodule iul\n  (output logic lbrkx, output logic [2:3] cvawpgb, output logic xnhyjs [4:3]);\n\n  xor al(lbrkx, eyezhdj, eyezhdj);\n\n  not ctwm(eyezhdj, lbrkx);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign cvawpgb = 'b1x;\n  assign xnhyjs = '{'b1,'bx};\n  assign eyezhdj = 'b1;\n  assign eyezhdj = 'bx;\nendmodule: iul\n\nmodule xvicefqhnc\n  (output logic [2:0] mi, output logic [3:3] o);\n\n\n  not iiqhh(mgzexopir, dlg);\n\n  xor ttvhm(dlg, lzi, pyw);\n\n  and yyxdxc(lzi, dlg, okjrcx);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign okjrcx = 'bz;\n  assign okjrcx = 'b0;\n  assign okjrcx = 'b1;\n  assign okjrcx = 'b0;\n  assign o = 'bz;\n  assign mi = 'bxx1;\n  assign dlg = 'b0;\nendmodule: xvicefqhnc\n\n// Seed after: 4925075022431791883,10002677915001445999\n"
      },
      {
        "id": "cannot_be_driven_with_non_default_strength_v2",
        "first_found": "2025-07-18T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: Variable 'nm' cannot be driven by a primitive or continuous assignment with non-default strength.\n",
        "full_example": "module pauht\n  ( output supply1 logic [2:1][4:3][4:4] wheupuag [3:1][4:3][2:0][0:1]\n  , output integer bfcpcps [1:2]\n  , output bit [1:0][4:4][3:4][1:0] nm\n  , output triand logic [4:0][4:3] jvlvzxp [0:1][4:4][2:2][4:1]\n  , input wor logic [1:2][0:0][4:0][2:3] nfywtz [3:0]\n  , input shortreal emg\n  , input byte dy\n  );\n\n\n  not rrtzpp(nm, xewuwwev);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign bfcpcps = '{'b0,'b1};\n  assign xewuwwev = 'b0;\n  assign wheupuag = '{'{'{'{'bz,'b0},'{'bz,'bz},'{'b1,'bz}},'{'{'bz,'b1},'{'bx,'b0},'{'b0,'b0}}},'{'{'{'bx,'bz},'{'b0,'b1},'{'bz,'bx}},'{'{'b0,'b1},'{'bx,'b0},'{'b1,'b1}}},'{'{'{'bx,'b0},'{'bz,'bz},'{'bx,'b0}},'{'{'bz,'b0},'{'b0,'b1},'{'bz,'b0}}}};\n  assign jvlvzxp = '{'{'{'{'bx,'bz,'b0,'bz}}},'{'{'{'b1,'b0,'bx,'b0}}}};\n\n  // Multi-driven assigns\nendmodule: pauht\n\nmodule sjmhw\n  (input supply1 logic [0:3][1:2] svkeknmyib [4:3][3:2], input bit [1:2][3:0][2:3] ohyhcc);\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign svkeknmyib = '{'{'b0,'bx},'{'b1,'bx}};\nendmodule: sjmhw\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "errors_in_port_declarations",
    "title": "Errors in port declarations",
    "short_desc": null,
    "examples": [
      {
        "id": "errors_in_port_declarations_v1",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "generated-modules/97-seed_14860280421552192959,5268399088297407135.sv:5: syntax error\ngenerated-modules/97-seed_14860280421552192959,5268399088297407135.sv:1: Errors in port declarations.\n",
        "full_example": "// Seed: 14860280421552192959,5268399088297407135\n\nmodule i\n( output trior logic [2:2][0:3] cat [0:0][4:3][1:3]\n, output trireg logic [2:0][3:4][3:4] rxidsk [4:0][2:0][2:4]\n, input logic j [4:0]\n, input uwire logic ab [3:1][1:0][2:1][1:0]\n, input tri0 logic [3:1][4:2][2:1] fsrhyzkckp\n, input wire logic [4:4][3:3][1:1] no [2:2][0:2][3:1]\n);\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: i\n\nmodule gjynarp\n( output trior logic [1:2][3:3] atxmtgmmlo\n, output bit wdwxkg [4:1][1:3]\n, output wand logic [3:1][3:3] b [3:1][2:1][3:2][1:2]\n, output logic [4:1] rrgtvsi [1:3]\n, input supply0 logic [0:1][3:4][0:1] wjhyuvwr [0:0][0:1][2:0]\n);\n\nlogic nogr [4:0];\nuwire logic mgqgz [3:1][1:0][2:1][1:0];\nwire logic [4:4][3:3][1:1] eebismoo [2:2][0:2][3:1];\ntrior logic [2:2][0:3] zdhbl [0:0][4:3][1:3];\ntrireg logic [2:0][3:4][3:4] wvdcxyzi [4:0][2:0][2:4];\nxor ch(dgpbeaju, kypo, atxmtgmmlo);\n\n// warning: implicit conversion of port connection expands from 1 to 12 bits\n// logic dgpbeaju -> trireg logic [2:0][3:4][3:4] dgpbeaju [4:0][2:0][2:4]\n\nnot s(xlvmhkdzsz, atxmtgmmlo);\n// warning: implicit conversion of port connection expands from 1 to 4 bits\n// logic xlvmhkdzsz -> trior logic [2:2][0:3] xlvmhkdzsz [0:0][4:3][1:3]\n\nand l(atxmtgmmlo, atxmtgmmlo, shqih);\ni vpctmycakj(.cat(zdhbl), .rxidsk(wvdcxyzi), .j(nogr), .ab(mgqgz), .fsrhyzkckp(wnkwajvykw), .no(eebismoo));\n// warning: implicit conversion of port connection truncates from 4 to 1 bits\n// trior logic [2:2][0:3] cat [0:0][4:3][1:3] -> wire logic zdhbl\n//\n// warning: implicit conversion of port connection truncates from 12 to 1 bits\n// trireg logic [2:0][3:4][3:4] rxidsk [4:0][2:0][2:4] -> wire logic wvdcxyzi\n//\n\n// warning: implicit conversion of port connection expands from 1 to 18 bits\n// logic wnkwajvykw -> tri0 logic [3:1][4:2][2:1] fsrhyzkckp\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: gjynarp\n\nmodule bbsg\n( output logic [0:0] hbyvofmb\n, output supply1 logic [0:3] novdqsyao [3:3][2:1][4:2]\n, output trior logic [3:0][4:4][2:4] coawnlv [1:3]\n, output byte dd [2:0][2:2][0:3]\n, input bit [4:0] opobrcyehd\n);\n\n// Top inputs -> top outputs assigns\nassign hbyvofmb = opobrcyehd;\n\n// Assigns\nendmodule: bbsg\n\nmodule v\n(input logic jpqwp [1:4], input reg [4:4] ftfbvveygw [0:2], input trior logic [3:3][3:1][2:2][3:3] vzx [4:1][0:4][1:2][4:0]);\n\nxor py(erhet, zjeir, dmvei);\nnot zgc(be, rqivv);\nand dhdxkdpo(utya, be, bbruvkfdgq);\nnot qxbzztzgis(dmvei, cd);\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: v\n\n// Seed after: 7080572195401457244,5268399088297407135\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "expression_width_does_not_match_width",
    "title": "Expression width does not match width",
    "short_desc": null,
    "examples": [
      {
        "id": "expression_width_does_not_match_width_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": "module a(output integer o1, input int i1, input integer i2);\n  or gate(o1, i1, i2);\nendmodule: a\n",
        "minified_error": null,
        "full_error": null,
        "full_example": "module tfft\n  ( output logic eiezecp\n  , output uwire kjagrfjq\n  , output int jbfwqxka\n  , output int ouafrjd\n  , input int wx\n  , input real bftmsuv\n  , input wire i\n  , input integer gymw\n  );\n\n\n  assign eiezecp = wx;\n  assign kjagrfjq = gymw;\n  assign jbfwqxka = wx;\n  assign ouafrjd = i;\nendmodule: tfft\n\nmodule wecazlcleg\n  (output integer yqnzybrx, output uwire xp, input int pypt, input int jqujyzt, input integer g);\n\n  or rg(yqnzybrx, pypt, g);\n\n  assign xp = g;\nendmodule: wecazlcleg\n\nmodule qzczsyeanw\n  (input real ov, input integer dftixk, input int lvxtzb, input uwire qu);\n\nendmodule: qzczsyeanw\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1221"
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "failed_assertion_prts_unpacked_dimensions",
    "title": "failed assertion prts[0]->unpacked_dimensions()==0",
    "short_desc": null,
    "examples": [
      {
        "id": "failed_assertion_prts_unpacked_dimensions_1661",
        "first_found": "2025-04-03T00:00:00.000Z",
        "minified_example": "module a(input wire i1 [1:2]);\n  assign i1 = '{'b1, 'b0};\nendmodule: a\n\nmodule b();\n  wire w [1:2];\n  a a_inst(.i1(w));\nendmodule: b\n",
        "minified_error": null,
        "full_error": null,
        "full_example": "// Seed: 13507575981681771882,5635924639322085807\n\nmodule upyu\n  (output int uytlurz [3:1], output logic [4:3] lgvmh, input wire vhdvpydcie [4:4][1:3], input logic [1:2][4:4] xjkoy);\n\n  // Top inputs -> top outputs assigns\n  assign lgvmh = xjkoy;\n\n  // Assigns\n  assign uytlurz = '{'b1,'b1,'b1};\n  assign vhdvpydcie = '{'{'b0,'b1,'b1}};\n  assign vhdvpydcie = '{'{'b1,'b0,'b1}};\nendmodule: upyu\n\nmodule fhqyox\n  (input real nr);\n\n  wire vzcsefbn [4:4][1:3];\n  int qyqz [3:1];\n\n  xor rylnlneqxm(llqsuzqnq, qcxdwwe, lonwvju);\n  upyu cvsilbyhs(.uytlurz(qyqz), .lgvmh(qcxdwwe), .vhdvpydcie(vzcsefbn), .xjkoy(qcxdwwe));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign lonwvju = 'b1;\n  assign vzcsefbn = '{'{'b0,'b0,'b0}};\n  assign lonwvju = 'b1;\n  assign qcxdwwe = 'b1z;\n  assign llqsuzqnq = 'b0;\n  assign qcxdwwe = 'b0x;\nendmodule: fhqyox\n\nmodule ma\n  (output bit [3:2][2:1] rqqji, output bit r, input logic [0:3] ngc, input logic [1:4][2:2][3:4] tb);\n\n  nand h(rqqji, xguwdoevz, rqqji);\n\n  // Top inputs -> top outputs assigns\n  assign r = tb;\n\n  // Assigns\n  assign xguwdoevz = 'b0;\n  assign xguwdoevz = 'b0;\n  assign xguwdoevz = 'bx;\n  assign xguwdoevz = 'b1;\n  assign xguwdoevz = 'b0;\nendmodule: ma\n\nmodule keaisgaadl\n  ( output logic [1:3] lonrroiv [4:4]\n  , output logic [4:4][3:2][0:4] mac\n  , output bit [2:1][4:3][4:3] mcc\n  , input wire e\n  , input bit [2:3] zhseg [4:2]\n  , input logic [4:0] fivlwpb [1:4]\n  );\n\n  fhqyox dwmnculns(.nr(e));\n\n  // Top inputs -> top outputs assigns\n  assign mac = e;\n\n  // Assigns\n  assign e = 'b1;\n  assign e = 'b1;\n  assign e = 'b1;\n  assign e = 'b1;\nendmodule: keaisgaadl\n\n// Seed after: 10065404187654998384,5635924639322085807\n"
      },
      {
        "id": "failed_assertion_prts_unpacked_dimensions_1666",
        "first_found": "2025-07-02T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "assert: elaborate.cc:1666: failed assertion prts[0]->unpacked_dimensions()==0\n",
        "full_example": "// Seed: 11308047302319177250,15556259958226977675\n\nmodule uxxuthb\n  (input wire zeigtvdbp [3:0], input bit [4:1] wdlbfljcj, input bit [0:1][4:2][4:4] xqsdv);\n\n  xor liwlhle(prawo, yopczqr, yopczqr);\n\n  not cvurtmdnh(w, xqsdv);\n  // warning: implicit conversion of port connection truncates from 6 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [0:1][4:2][4:4] xqsdv -> logic xqsdv\n\n  or tejh(ltfxyj, yopczqr, ltfxyj);\n\n  or q(yopczqr, qjragd, xpyoh);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign xpyoh = 'b1;\n  assign xpyoh = 'bz;\n  assign qjragd = 'b1;\n  assign xpyoh = 'bz;\n  assign zeigtvdbp = '{'b1,'b1,'b0,'b0};\nendmodule: uxxuthb\n\nmodule knwovmp\n  ( output real vgb\n  , output bit mlsxlttpca [3:0]\n  , output bit [4:1][0:4] ec\n  , input bit [2:3] zgqxowuzjj [1:3]\n  , input logic [4:0] dvv [1:4]\n  );\n\n  wire k [3:0];\n\n  uxxuthb qyhkd(.zeigtvdbp(k), .wdlbfljcj(awdswmvyno), .xqsdv(r));\n  // warning: implicit conversion of port connection expands from 1 to 4 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire awdswmvyno -> bit [4:1] wdlbfljcj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 6 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire r -> bit [0:1][4:2][4:4] xqsdv\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign vgb = 'b1;\n  assign ec = 'b11010010011001000111;\n  assign mlsxlttpca = '{'b1,'b1,'b0,'b0};\nendmodule: knwovmp\n\nmodule fgbha\n  (output logic [1:0][4:3] htwzzr, output int lyvyxabqmd [1:2][2:2], output bit [0:2][3:4][2:1] es, input bit [4:0][0:0] fnxrhonkd);\n\n\n  and f(es, htwzzr, fib);\n  // warning: implicit conversion of port connection expands from 1 to 12 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   logic es -> bit [0:2][3:4][2:1] es\n  //\n  // warning: implicit conversion of port connection truncates from 4 to 1 bits\n  //   logic [1:0][4:3] htwzzr -> logic htwzzr\n\n  xor ruuujmad(ob, htwzzr, whyte);\n  // warning: implicit conversion of port connection truncates from 4 to 1 bits\n  //   logic [1:0][4:3] htwzzr -> logic htwzzr\n\n  nand vjzacqoige(htwzzr, htwzzr, wbbdrrnq);\n  // warning: implicit conversion of port connection expands from 1 to 4 bits\n  //   logic htwzzr -> logic [1:0][4:3] htwzzr\n  //\n  // warning: implicit conversion of port connection truncates from 4 to 1 bits\n  //   logic [1:0][4:3] htwzzr -> logic htwzzr\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign fib = 'b0;\n  assign wbbdrrnq = 'b1;\n  assign wbbdrrnq = 'b0;\n  assign whyte = 'b0;\n  assign lyvyxabqmd = '{'{'bz},'{'b1}};\n  assign ob = 'bx;\nendmodule: fgbha\n\nmodule ntsh\n  ( output int iprnthqe [1:1]\n  , input logic [1:1][0:3] iuiykjllvi\n  , input logic [2:1] bvy\n  , input logic [1:3][1:1] oigcryjunp\n  , input logic [3:0] qfmhvgz [0:2]\n  );\n\n  wire ypyeugtc [3:0];\n\n  not lywnhbhus(xexbl, oeqxdw);\n\n  not kwfnv(mazndohkpz, kbnnnjnf);\n\n  and zq(tvrtbipgc, mazndohkpz, qhgiwirgp);\n\n  uxxuthb nytgb(.zeigtvdbp(ypyeugtc), .wdlbfljcj(oigcryjunp), .xqsdv(mazndohkpz));\n  // warning: implicit conversion of port connection expands from 3 to 4 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   logic [1:3][1:1] oigcryjunp -> bit [4:1] wdlbfljcj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 6 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire mazndohkpz -> bit [0:1][4:2][4:4] xqsdv\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign ypyeugtc = '{'b0,'b1,'b0,'b1};\n  assign qhgiwirgp = 'bx;\n  assign ypyeugtc = '{'b0,'b0,'b0,'b0};\n  assign kbnnnjnf = 'b0;\n  assign iprnthqe = '{'b0};\n  assign mazndohkpz = 'b0;\n  assign tvrtbipgc = 'b1;\n  assign mazndohkpz = 'bz;\nendmodule: ntsh\n\n// Seed after: 9722071735199696192,15556259958226977675\n"
      },
      {
        "id": "failed_assertion_prts_unpacked_dimensions_1662",
        "first_found": "2025-07-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "assert: elaborate.cc:1662: failed assertion prts[0]->unpacked_dimensions()==0\n",
        "full_example": "// Seed: 13965131667319788158,14865787408525461641\n\nmodule nh\n  (output bit [4:2] socv, input integer hruyko [3:2], input logic [0:3][1:3][4:1] hguwg, input wire vyjh [0:3][2:0]);\n\n\n  not jabsepvph(jjivwpnzr, kpfl);\n\n  and zax(lumokkrv, socv, socv);\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [4:2] socv -> logic socv\n  //\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [4:2] socv -> logic socv\n\n  not ttq(socv, socv);\n  // warning: implicit conversion of port connection expands from 1 to 3 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   logic socv -> bit [4:2] socv\n  //\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [4:2] socv -> logic socv\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign kpfl = 'bz;\n  assign lumokkrv = 'b1;\n  assign vyjh = '{'{'b1,'b0,'b1},'{'b0,'b1,'b1},'{'b1,'b1,'b1},'{'b0,'b1,'b0}};\nendmodule: nh\n\nmodule jvrbtyy\n  (input uwire p [0:2][1:4], input integer mvuekky [2:1][1:4], input logic [4:1] bklnx);\n\n  integer ljztmasvs [3:2];\n  wire bxqdrhkv [0:3][2:0];\n  integer xhlv [3:2];\n  wire a [0:3][2:0];\n\n  nh kacbezspy(.socv(su), .hruyko(ljztmasvs), .hguwg(xa), .vyjh(bxqdrhkv));\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [4:2] socv -> wire su\n  //\n  // warning: implicit conversion of port connection expands from 1 to 48 bits\n  //   wire xa -> logic [0:3][1:3][4:1] hguwg\n\n  nh valll(.socv(xa), .hruyko(xhlv), .hguwg(yjnlfkl), .vyjh(a));\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [4:2] socv -> wire xa\n  //\n  // warning: implicit conversion of port connection expands from 1 to 48 bits\n  //   wire yjnlfkl -> logic [0:3][1:3][4:1] hguwg\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign xhlv = '{'b0,'b0};\n  assign ljztmasvs = '{'b0,'b1};\nendmodule: jvrbtyy\n\nmodule xen\n  (output uwire ffokjy [4:0], output logic [0:0][2:4] qtjgxxnhd, input bit [4:3] ykjtxamk, input logic mcobdgrcf [1:4]);\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign ffokjy = '{'b1,'b0,'b0,'b0,'b1};\n  assign qtjgxxnhd = 'b10x;\nendmodule: xen\n\nmodule frxmmsmuij\n  (output logic [3:4] prmyf, input integer llvrlzdvv, input wire ezesnh);\n\n  logic rywnjsg [1:4];\n  uwire cvzn [4:0];\n\n  xor pojahneyg(gnkyfiqf, vybiwu, prmyf);\n  // warning: implicit conversion of port connection truncates from 2 to 1 bits\n  //   logic [3:4] prmyf -> logic prmyf\n\n  xen r(.ffokjy(cvzn), .qtjgxxnhd(prmyf), .ykjtxamk(mquwxsnpy), .mcobdgrcf(rywnjsg));\n  // warning: implicit conversion of port connection truncates from 3 to 2 bits\n  //   logic [0:0][2:4] qtjgxxnhd -> logic [3:4] prmyf\n  //\n  // warning: implicit conversion of port connection expands from 1 to 2 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire mquwxsnpy -> bit [4:3] ykjtxamk\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign mquwxsnpy = 'b10;\n  assign rywnjsg = '{'bz,'bz,'bx,'b1};\n  assign vybiwu = 'bz;\nendmodule: frxmmsmuij\n\n\n// Seed after: 8890095644694070872,14865787408525461641\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1231"
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "failed_to_elaborate_primitive_output_expression",
    "title": "Failed to elaborate primitive output expression",
    "short_desc": null,
    "examples": [
      {
        "id": "failed_to_elaborate_primitive_output_expression_v1",
        "first_found": "2025-07-19T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: Failed to elaborate primitive output expression omuyouc.xyanlrg.\n",
        "full_example": "module omuyouc\n  ( output tri1 logic [0:1][0:3] j [0:3]\n  , output reg otcyh [4:3]\n  , output real nw\n  , output integer xyanlrg\n  , input trior logic [0:0] cuo [1:3][4:3]\n  );\n\n\n  not daf(m, xyanlrg);\n\n  not pgxvlfxwmv(xyanlrg, nw);\n\n  not ivpogsdaah(nw, nw);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign cuo = '{'{'bz,'bx},'{'b0,'bz},'{'b0,'bx}};\n  assign j = '{'bz,'b0,'bx,'b1};\nendmodule: omuyouc\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "how_to_elaborate_assignment_pattern_expressions_for_real_type",
    "title": "I don't know how to elaborate assignment for real type",
    "short_desc": null,
    "examples": [
      {
        "id": "how_to_elaborate_assignment_pattern_expressions_for_real_type_v1",
        "first_found": "2025-04-03T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "sorry: I don't know how to elaborate assignment_pattern expressions for real type yet.\n     : Expression is: '{'d1}\nerror: Unable to elaborate r-value: '{'d1}\n",
        "full_example": "// Seed: 13146146607886611362,17421924455848648743\n\nmodule hjf\n  (output wire lig, output real mhuyoy [4:0][2:4], output real irrpjsuiui [0:0], output logic [0:1] xylvvl [2:1]);\n  \n  // Top inputs -> top outputs assigs\n  \n  // Assigns\n  assign irrpjsuiui = '{'b1};\nendmodule: hjf\n\n// Seed after: 14170142877157805317,17421924455848648743\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "infinity_zero_tick",
    "title": "Infinity zero tick",
    "short_desc": "The first simulation tick runs indefinitely",
    "examples": [
      {
        "id": "infinity_zero_tick_v1",
        "first_found": null,
        "minified_example": "module one (output integer o1,  input bit i1);\n  assign o1 = i1;\nendmodule: one\n\nmodule two (output logic o2);\n\n  one oneInst(.o1(someWire), .i1(o2));\n  nand nandInst(o2, o2, someWire);\n\nendmodule: two\n",
        "minified_error": null,
        "full_error": null,
        "full_example": null
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "invalid_module_item",
    "title": "Invalid module item",
    "short_desc": null,
    "examples": [
      {
        "id": "invalid_module_item_v1",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "generated-modules/97-seed_14860280421552192959,5268399088297407135.sv:31: syntax error\ngenerated-modules/97-seed_14860280421552192959,5268399088297407135.sv:31: error: Invalid module item.\n",
        "full_example": "// Seed: 14860280421552192959,5268399088297407135\n\nmodule i\n( output trior logic [2:2][0:3] cat [0:0][4:3][1:3]\n, output trireg logic [2:0][3:4][3:4] rxidsk [4:0][2:0][2:4]\n, input logic j [4:0]\n, input uwire logic ab [3:1][1:0][2:1][1:0]\n, input tri0 logic [3:1][4:2][2:1] fsrhyzkckp\n, input wire logic [4:4][3:3][1:1] no [2:2][0:2][3:1]\n);\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: i\n\nmodule gjynarp\n( output trior logic [1:2][3:3] atxmtgmmlo\n, output bit wdwxkg [4:1][1:3]\n, output wand logic [3:1][3:3] b [3:1][2:1][3:2][1:2]\n, output logic [4:1] rrgtvsi [1:3]\n, input supply0 logic [0:1][3:4][0:1] wjhyuvwr [0:0][0:1][2:0]\n);\n\nlogic nogr [4:0];\nuwire logic mgqgz [3:1][1:0][2:1][1:0];\nwire logic [4:4][3:3][1:1] eebismoo [2:2][0:2][3:1];\ntrior logic [2:2][0:3] zdhbl [0:0][4:3][1:3];\ntrireg logic [2:0][3:4][3:4] wvdcxyzi [4:0][2:0][2:4];\nxor ch(dgpbeaju, kypo, atxmtgmmlo);\n\n// warning: implicit conversion of port connection expands from 1 to 12 bits\n// logic dgpbeaju -> trireg logic [2:0][3:4][3:4] dgpbeaju [4:0][2:0][2:4]\n\nnot s(xlvmhkdzsz, atxmtgmmlo);\n// warning: implicit conversion of port connection expands from 1 to 4 bits\n// logic xlvmhkdzsz -> trior logic [2:2][0:3] xlvmhkdzsz [0:0][4:3][1:3]\n\nand l(atxmtgmmlo, atxmtgmmlo, shqih);\ni vpctmycakj(.cat(zdhbl), .rxidsk(wvdcxyzi), .j(nogr), .ab(mgqgz), .fsrhyzkckp(wnkwajvykw), .no(eebismoo));\n// warning: implicit conversion of port connection truncates from 4 to 1 bits\n// trior logic [2:2][0:3] cat [0:0][4:3][1:3] -> wire logic zdhbl\n//\n// warning: implicit conversion of port connection truncates from 12 to 1 bits\n// trireg logic [2:0][3:4][3:4] rxidsk [4:0][2:0][2:4] -> wire logic wvdcxyzi\n//\n\n// warning: implicit conversion of port connection expands from 1 to 18 bits\n// logic wnkwajvykw -> tri0 logic [3:1][4:2][2:1] fsrhyzkckp\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: gjynarp\n\nmodule bbsg\n( output logic [0:0] hbyvofmb\n, output supply1 logic [0:3] novdqsyao [3:3][2:1][4:2]\n, output trior logic [3:0][4:4][2:4] coawnlv [1:3]\n, output byte dd [2:0][2:2][0:3]\n, input bit [4:0] opobrcyehd\n);\n\n// Top inputs -> top outputs assigns\nassign hbyvofmb = opobrcyehd;\n\n// Assigns\nendmodule: bbsg\n\nmodule v\n(input logic jpqwp [1:4], input reg [4:4] ftfbvveygw [0:2], input trior logic [3:3][3:1][2:2][3:3] vzx [4:1][0:4][1:2][4:0]);\n\nxor py(erhet, zjeir, dmvei);\nnot zgc(be, rqivv);\nand dhdxkdpo(utya, be, bbruvkfdgq);\nnot qxbzztzgis(dmvei, cd);\n\n// Top inputs -> top outputs assigns\n// Assigns\nendmodule: v\n\n// Seed after: 7080572195401457244,5268399088297407135\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "packed_array_assignment_pattern_expects_elements_in_this_context",
    "title": "Packed array assignment pattern expects <num> element(s) in this context",
    "short_desc": null,
    "examples": [
      {
        "id": "packed_array_assignment_pattern_expects_elements_in_this_context_v1",
        "first_found": "2025-03-09T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": "// Seed: 103981633713638416,3517966847084180479\n\nmodule wzxxt\n  (output logic [1:1] lunkojo, output real zgqpgtsvt [3:0][0:0], input bit [2:3] juwdfii, input uwire kfuj [3:1][4:3]);\n\n  or vqmhwugnjr(dry, pbswkb, pmdxkzydk);\n\n  // Top inputs -> top outputs assigns\n  assign lunkojo = juwdfii;\n\n  // Assigns\n  assign pmdxkzydk = 'bz;\n  assign pbswkb = 'bx;\n  assign zgqpgtsvt = '{'{'bx},'{'b1},'{'bx},'{'b0}};\n  assign dry = 'b1;\n  assign dry = 'bx;\n  assign dry = 'bz;\nendmodule: wzxxt\n\nmodule sdhrah\n  ( output logic eva [3:2]\n  , output integer e\n  , output bit [0:4] pclhhkrs [4:4]\n  , output logic [2:2][1:1][2:0] buguy\n  , input bit [0:3] qiwlwu\n  );\n\n  // Top inputs -> top outputs assigns\n  assign e = qiwlwu;\n\n  // Assigns\n  assign buguy = 'bzxz;\n  assign pclhhkrs = '{'b01101};\n  assign eva = '{'bx,'bx};\nendmodule: sdhrah\n\nmodule iruntqmc\n  ( output logic [1:0][1:0] ltoy\n  , output integer shymsv [4:0]\n  , output wire htdyggar\n  , input logic [2:1] xkluu\n  , input int n\n  , input logic [1:2] bdocp [2:2]\n  );\n\n\n  // Top inputs -> top outputs assigns\n  assign ltoy = n;\n\n  // Assigns\n  assign htdyggar = 'b0;\n  assign htdyggar = 'b1;\n  assign htdyggar = 'b0;\n  assign htdyggar = 'b1;\n  assign htdyggar = 'b1;\nendmodule: iruntqmc\n\n// Seed after: 10300663968021245867,3517966847084180479\n"
      },
      {
        "id": "packed_array_assignment_pattern_expects_elements_in_this_context_v2",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": "module a(output byte b [0:0]);\n  assign b = '{'b1};\nendmodule: a\n",
        "minified_error": null,
        "full_error": "error: Packed array assignment pattern expects 32 element(s) in this context.\nFound 1 element(s).\n",
        "full_example": "// Seed: 14915608053220662598,14732534206656503631\n\nmodule dezagwgu\n  (output uwire llvafqeyiy, output int djvbra [0:0]);\n\n\n  not lji(oialfexbh, jrvm);\n  not nfyvtut(llvafqeyiy, oialfexbh);\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\n  assign djvbra = '{'b1};\nendmodule: dezagwgu\n\nmodule jllbeivu\n  ( output int gwxutaovkx [1:4]\n  , output logic [4:2][4:0] jbmh\n  , output uwire mgqmszmm [2:0]\n  , input logic [1:0][1:1] oftohzel\n  , input bit zalqdg\n  , input int s\n  );\n\n  int mhvp [0:0];\n\n  dezagwgu yth(.llvafqeyiy(ncfjx), .djvbra(mhvp));\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\nendmodule: jllbeivu\n\nmodule szrueludz\n  ( output bit [2:2] iz\n  , output logic jfqncy\n  , output wire x\n  , output bit [3:3] zp\n  , input logic [3:0] fbevawcvjt [2:2]\n  , input logic [1:4] jnxzeju\n  );\n\n  int udl [0:0];\n  int nmhdnefld [0:0];\n  int pghd [0:0];\n\n  dezagwgu wvdcim(.llvafqeyiy(zwm), .djvbra(udl));\n  dezagwgu qoyl(.llvafqeyiy(zp), .djvbra(nmhdnefld));\n  dezagwgu liiof(.llvafqeyiy(dtvtqsfypa), .djvbra(pghd));\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\n  assign jfqncy = 'bx;\n  assign x = 'b1;\nendmodule: szrueludz\n\nmodule hgcdhhv\n  ( output wire ms\n  , output bit [0:2] zu [2:4]\n  , output logic [4:2] jehm\n  , input logic [3:2] gpkbpevrrk\n  , input logic [1:3] lfbwc\n  , input uwire vgcqn\n  , input logic [1:3][3:0] fggkja\n  );\n\n  int sytpgyhfuo [0:0];\n\n  dezagwgu lwjribmyim(.llvafqeyiy(ms), .djvbra(sytpgyhfuo));\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\nendmodule: hgcdhhv\n\n// Seed after: 8189762551118901864,14732534206656503631\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1224"
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "scalar_type_is_not_a_valid_context_for_assignment_pattern",
    "title": "Scalar type is not a valid context for assignment pattern",
    "short_desc": "A continuously assigned unpacked array literal is parsed wrong",
    "examples": [
      {
        "id": "scalar_type_is_not_a_valid_context_for_assignment_pattern_v1",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": "module a(output bit b [0:0]);\n  assign b = '{'b0};\nendmodule: a\n",
        "minified_error": null,
        "full_error": "error: scalar type is not a valid context for assignment pattern.\nerror: Unable to elaborate r-value: '{'{'d0}}\n",
        "full_example": "// Seed: 13030752297893083809,8846961402350338489\n\nmodule ytfkwsta\n  ();\n\n  not zbp(pftgbi, pftgbi);\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\nendmodule: ytfkwsta\n\nmodule ytxv\n  ( output bit myjjpdk\n  , output bit [1:1] iaphkidkmw [3:4]\n  , output uwire ypwj [3:1]\n  , output bit iaw [3:3][3:3]\n  , input int fzxsscchkk\n  , input bit [2:0] ca [1:0]\n  , input int qgbutvmv [4:3][3:0]\n  );\n\n  ytfkwsta vbrlnkif();\n  ytfkwsta ivnmqkuj();\n  ytfkwsta wb();\n\n  // Top inputs -> top outputs assigs\n  assign myjjpdk = fzxsscchkk;\n\n  // Assigns\n  assign iaw = '{'{'b0}};\nendmodule: ytxv\n\nmodule rqrzqcfp\n  ( output logic woupma [2:3]\n  , output uwire vdrlzcs [0:4]\n  , output real dpiqoatra\n  , input logic [2:1] sgob [4:0]\n  , input bit [2:2] hdlbxab [4:1]\n  , input uwire owa [2:2][2:1]\n  );\n\n\n  ytfkwsta hgnw();\n  ytfkwsta jjkjodvd();\n  ytfkwsta fbpphqztol();\n  ytfkwsta po();\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\nendmodule: rqrzqcfp\n\n// Seed after: 6587817683497405930,8846961402350338489\n"
      },
      {
        "id": "scalar_type_is_not_a_valid_context_for_assignment_pattern_v2",
        "first_found": null,
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: scalar type is not a valid context for assignment pattern.\nerror: Unable to elaborate r-value: '{'bz}\n",
        "full_example": "// Seed: 578962042012857023,8352879869878179961\n\nmodule v\n  ( output logic [4:2] zm [3:4]\n  , output logic [3:4] wvvw [2:1]\n  , output logic [4:4] o\n  , output logic uhgidcxia [2:2]\n  , input bit [2:1][3:3] om\n  , input bit [0:2][0:0] agclap\n  );\n\n\n\n  // Top inputs -> top outputs assigns\n  assign o = agclap;\n\n  // Assigns\n  assign uhgidcxia = '{'bz};\nendmodule: v\n\n\n\n// Seed after: 11804619105400156331,8352879869878179961\n"
      },
      {
        "id": "scalar_type_is_not_a_valid_context_for_assignment_pattern_v3",
        "first_found": null,
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: scalar type is not a valid context for assignment pattern.\nerror: Unable to elaborate r-value: '{'bx}\n",
        "full_example": "// Seed: 2706590906824897658,1821645297014569385\n\nmodule htgh\n  ( output bit [2:2] pf [2:0]\n  , output logic [1:2][4:2][2:3] kseakjaqge\n  , output logic [3:2] jbgep [0:2]\n  , input logic [1:0][0:2] modjhh\n  , input bit [0:3][4:4] bypta\n  , input logic [4:3] a [0:3]\n  );\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign pf = '{'b0,'b0,'b1};\nendmodule: htgh\n\nmodule pjunhle\n  (output int tez [4:1][3:2], output real h [0:0][4:4], output int tz, output bit [1:4] hqykveqbbw, input integer pbodvp [1:3]);\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\nendmodule: pjunhle\n\nmodule xkmwnqaduh\n  (output bit [2:3] a [3:2], output logic jvbuffuq [0:0], output uwire tmbz, output integer y);\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign y = 'b1;\n  assign tmbz = 'b0;\n  assign jvbuffuq = '{'bx};\n  assign a = '{'b10,'b11};\nendmodule: xkmwnqaduh\n\n\n\n// Seed after: 17951437587477541294,1821645297014569385\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1217"
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "t_dll_api_cc_ivl_nexus_s",
    "title": "ivl_nexus_s* ivl_signal_nex ... Assertion failed",
    "short_desc": "Assertion failure in ivl_signal_nex with uwire array port",
    "examples": [
      {
        "id": "t-dll-api_cc_ivl_nexus_s_v1",
        "first_found": "2025-02-03T00:00:00.000Z",
        "minified_example": "module a(output uwire o1 [0:1]);\nendmodule\n",
        "minified_error": null,
        "full_error": "ivl: t-dll-api.cc:2501: ivl_nexus_s* ivl_signal_nex(ivl_signal_t, unsigned int): Assertion `net->type_ == IVL_SIT_REG' failed.\nAborted\n",
        "full_example": "module mbzhgmns\n  ( output integer zvqtocqjzz [1:1]\n  , output uwire jowbejdgpo\n  , input logic purq\n  , input logic [2:4] ycvsy\n  , input bit [3:3] moxbzqfhq\n  , input logic [3:0] iw\n  );\n\n  or grrpeuzcx(rvhemuimn, purq, qmttde);\n\nendmodule: mbzhgmns\n\nmodule cbac\n  (output logic u, output real shgfq);\n\n  or jqlavwrelr(cyjhwmr, cyjhwmr, y);\n\nendmodule: cbac\n\nmodule lilblj\n  (output wire fj, output uwire oohqf [2:3], output bit [2:0] bkxlygvty, output integer zayn);\n\nendmodule: lilblj\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1213"
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "unable_to_resolve_label",
    "title": "Unable to resolve label",
    "short_desc": "Simulation of a continuous assignment of an unpacked array throws error",
    "examples": [
      {
        "id": "unable_to_resolve_label_v1",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": "module a (output logic b [2:1]);\n  assign b = '{'b1,'bz};\nendmodule: a\n",
        "minified_error": null,
        "full_error": "Unable to resolve label v0x55a8dad28e10_0\ncompile_cleanup: 1 unresolved items\na.out: Program not runnable, 1 errors.\n",
        "full_example": "// Seed: 14318809588400357211,13712862608348962075\n\nmodule bonufropgc\n  ( output bit haroct [1:2][2:1]\n  , output integer hlvvwzhwsh\n  , output logic y [2:1]\n  , input bit go\n  , input bit [2:2] vrqmu [1:0]\n  , input integer nffbpbbong [2:4]\n  , input bit [4:2][1:0] ec\n  );\n\n  // Top inputs -> top outputs assigs\n  assign hlvvwzhwsh = ec;\n\n  // Assigns\n  assign y = '{'b1,'bz};\nendmodule: bonufropgc\n\n// Seed after: 12068331556777782645,13712862608348962075\n"
      },
      {
        "id": "unable_to_resolve_label_v2",
        "first_found": null,
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": null
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1218"
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "unresolved_wire_cannot_have_multiple_drivers",
    "title": "Unresolved wire cannot have multiple drivers",
    "short_desc": null,
    "examples": [
      {
        "id": "invalid_module_item_v1",
        "first_found": "2025-07-19T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "error: Unresolved wire 'k' cannot have multiple drivers.\n",
        "full_example": "module nt\n  (input supply1 logic [0:0][1:2][4:2][1:2] irjnhwb, input realtime odtjxy);\n\n  not nraw(vpoe, irjnhwb);\n  // warning: implicit conversion of port connection truncates from 12 to 1 bits\n  //   supply1 logic [0:0][1:2][4:2][1:2] irjnhwb -> logic irjnhwb\n\n  xor e(cglxtgqc, cglxtgqc, ybqvnrmfcz);\n\n  not ntd(mkwfgabsg, irjnhwb);\n  // warning: implicit conversion of port connection truncates from 12 to 1 bits\n  //   supply1 logic [0:0][1:2][4:2][1:2] irjnhwb -> logic irjnhwb\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign vpoe = 'bz;\n  assign cglxtgqc = 'b1;\nendmodule: nt\n\nmodule thqjsww\n  ( output longint hinfmmmc [2:2]\n  , output shortreal vzbcvxk\n  , output wor logic tggow\n  , output uwire logic k\n  , input time pdjt [4:0][0:3][1:0]\n  , input shortint ckeyv\n  , input bit [4:4][0:4][3:1] mtpkv\n  , input tri1 logic [3:4][1:0][0:1][1:4] vchnafbf [0:3]\n  );\n\n  nt uekjjvqge(.irjnhwb(k), .odtjxy(nswbe));\n  // warning: implicit conversion of port connection expands from 1 to 12 bits\n  //   logic k -> supply1 logic [0:0][1:2][4:2][1:2] irjnhwb\n  //\n  // warning: implicit conversion of port connection expands from 1 to 64 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  //   wire logic nswbe -> realtime odtjxy\n\n  xor dtjytlnzj(csblmehu, ckeyv, nswbe);\n  // warning: implicit conversion of port connection truncates from 16 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   shortint ckeyv -> logic ckeyv\n\n  or bbrzftyh(nswbe, k, ckeyv);\n  // warning: implicit conversion of port connection truncates from 16 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   shortint ckeyv -> logic ckeyv\n\n  not w(k, tqkh);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign tggow = 'b0;\n\n  // Multi-driven assigns\n  assign nswbe = 'b0;\n  assign tggow = 'bz;\nendmodule: thqjsww\n\nmodule taejvqtg\n  ();\n\n  time f [4:0][0:3][1:0];\n  tri1 logic [3:4][1:0][0:1][1:4] eg [0:3];\n  longint zielsum [2:2];\n\n  thqjsww jqyzzhoj(.hinfmmmc(zielsum), .vzbcvxk(ggr), .tggow(ncinbpbx), .k(rjxfqlp), .pdjt(f), .ckeyv(rfrc), .mtpkv(rjxfqlp), .vchnafbf(eg));\n  // warning: implicit conversion of port connection truncates from 32 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  //   shortreal vzbcvxk -> wire logic ggr\n  //\n  // warning: implicit conversion of port connection expands from 1 to 16 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic rfrc -> shortint ckeyv\n  //\n  // warning: implicit conversion of port connection expands from 1 to 15 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic rjxfqlp -> bit [4:4][0:4][3:1] mtpkv\n\n  not zxdlg(cxpzzf, vitddqtpf);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign f = '{'{'{'bz,'bx},'{'b1,'b1},'{'b0,'bz},'{'bx,'bx}},'{'{'b0,'bz},'{'b1,'bz},'{'b0,'bx},'{'bx,'bz}},'{'{'bx,'b1},'{'b0,'bx},'{'b1,'bx},'{'bx,'bx}},'{'{'b0,'bx},'{'b0,'bz},'{'bz,'bx},'{'b1,'bx}},'{'{'bz,'bx},'{'b1,'b1},'{'bx,'b0},'{'b0,'bz}}};\n  assign rfrc = 'b1;\n  assign eg = '{'b0,'bx,'bz,'b0};\n  assign vitddqtpf = 'b1;\n\n  // Multi-driven assigns\n  assign ggr = 'b0;\n  assign eg = '{'b0,'bz,'b1,'bz};\n  assign eg = '{'b0,'b0,'bz,'b1};\n  assign eg = '{'b0,'b0,'bx,'bx};\nendmodule: taejvqtg\n\nmodule jgctabv\n  ( output tri1 logic [3:4][3:2][4:4] evp [2:3]\n  , output logic djfsmk\n  , output tri logic [0:4][2:3] lr [3:0][1:0][4:3]\n  , output supply1 logic [1:2][3:0][0:0] kl [3:1][4:1]\n  , input byte volqxmmfv\n  );\n\n\n  not dmmrcv(djfsmk, df);\n\n  nt sjcznoha(.irjnhwb(hhd), .odtjxy(volqxmmfv));\n  // warning: implicit conversion of port connection expands from 1 to 12 bits\n  //   wire logic hhd -> supply1 logic [0:0][1:2][4:2][1:2] irjnhwb\n  //\n  // warning: implicit conversion of port connection expands from 8 to 64 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   byte volqxmmfv -> realtime odtjxy\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign evp = '{'b1,'b1};\n  assign kl = '{'{'bz,'b1,'bz,'b0},'{'b1,'bx,'bz,'b0},'{'bz,'bx,'bz,'bx}};\n  assign df = 'bx;\n\n  // Multi-driven assigns\n  assign hhd = 'b1;\n  assign kl = '{'{'bx,'b0,'b1,'bx},'{'b1,'bx,'b0,'bx},'{'b1,'bx,'bz,'b1}};\n  assign lr = '{'{'{'bz,'b0},'{'bz,'bx}},'{'{'bz,'bx},'{'bz,'b0}},'{'{'b0,'b0},'{'b1,'b0}},'{'{'b0,'bx},'{'b0,'bz}}};\n  assign kl = '{'{'bx,'bz,'b1,'b0},'{'bz,'bx,'b0,'bx},'{'b0,'bx,'b1,'b0}};\nendmodule: jgctabv\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "iverilog",
    "id": "uwire_must_have_single_driver",
    "title": "Uwire must have single driver",
    "short_desc": "(implicit) uwire <name> must have a single driver, found <num>",
    "examples": [
      {
        "id": "implicit_uwire_must_have_single_driver",
        "first_found": "2025-04-03T00:00:00.000Z",
        "minified_example": "module a(output bit a1);\n  or zlsdkl(a1, a1, w1);\nendmodule: a\n\nmodule b();\n\n  a a_inst(.a1(b1));\n\n  assign b1 = 'b0;\n  assign b1 = 'b0;\n\nendmodule: b\n",
        "minified_error": "vvp.tgt error: (implicit) uwire \"b1\" must have a single driver, found (3).\n",
        "full_error": "error: (implicit) uwire \"qpqlbpygsh\" must have a single driver, found (3).\n",
        "full_example": "module bdaodpsf\n  (output bit clgyzohvz, output logic hzo [0:4][0:2]);\n\n  or zlsdkl(clgyzohvz, clgyzohvz, atbnehnw);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign atbnehnw = 'b0;\n  assign hzo = '{'{'b0,'bx,'bx},'{'b1,'b1,'b0},'{'b0,'bz,'bx},'{'b1,'bz,'bx},'{'bz,'bz,'bz}};\nendmodule: bdaodpsf\n\nmodule zorm\n  (output integer ufqubxhuxl, input wire nr [3:4][3:2], input logic [4:1] r);\n\n  logic s [0:4][0:2];\n\n  or xkqdjlbiqd(eozw, rxadmiqii, gy);\n  bdaodpsf lmjvjkhxr(.clgyzohvz(rxadmiqii), .hzo(s));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign gy = 'b0;\nendmodule: zorm\n\nmodule ly\n  ( output bit [1:1] usgt [4:0]\n  , output logic [0:2] ik\n  , output int ejuzdxugxb\n  , input logic [3:1][4:3][4:1] ywlchwplkp\n  , input int z\n  , input wire dpseqfo\n  , input logic [0:4] fravs\n  );\n\n  logic zaz [0:4][0:2];\n  logic rmmead [0:4][0:2];\n\n  bdaodpsf ht(.clgyzohvz(qpqlbpygsh), .hzo(zaz));\n  bdaodpsf cihddeut(.clgyzohvz(mjv), .hzo(rmmead));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign ik = 'bzz0;\n  assign ejuzdxugxb = 'b1;\n  assign usgt = '{'b0,'b0,'b1,'b1,'b1};\n  assign dpseqfo = 'b1;\n  assign qpqlbpygsh = 'b0;\n  assign qpqlbpygsh = 'b0;\nendmodule: ly\n\nmodule ofdvh\n  ( output logic [3:1] yw\n  , output logic [0:0][2:0][4:0] atf\n  , output int cechaeibm [0:1]\n  , input bit [3:4] wj\n  , input bit wfyyslk [3:1][0:3]\n  , input logic [2:0] em [4:3]\n  , input bit nvhxl [0:1]\n  );\n\n  logic iwizhrmspm [0:4][0:2];\n\n  bdaodpsf k(.clgyzohvz(yw), .hzo(iwizhrmspm));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign cechaeibm = '{'b0,'b1};\n  assign atf = 'b110z1011z01x110;\nendmodule: ofdvh\n"
      },
      {
        "id": "explicit_uwire_must_have_single_driver",
        "first_found": null,
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": null
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "vvp_arith_cast_int_recv_vec4",
    "title": "18vvp_arith_cast_int: recv_vec4 not implemented\n",
    "short_desc": "Some functions are not implemented",
    "examples": [
      {
        "id": "vvp_arith_cast_int_recv_vec4_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": "module a(output integer b, output real c);\n  and g(c, c, c);\n  assign b = c;\nendmodule: a\n",
        "minified_error": "internal error: 18vvp_arith_cast_int: recv_vec4 not implemented\nvvp: vvp_net.cc:3285: virtual void vvp_net_fun_t::recv_vec4(vvp_net_ptr_t, const vvp_vector4_t&, vvp_context_t): Assertion `0' failed.\nAborted\n",
        "full_error": null,
        "full_example": null
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/steveicarus/iverilog/issues/1222"
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "vvp_fun_not_recv_real",
    "title": "vvp_fun_not: recv_real not implemented\n",
    "short_desc": null,
    "examples": [
      {
        "id": "10vvp_fun_or_recv_real(0.000000)_not_implemented",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": "module kcqr\n  (output bit ebu [0:4][4:3], input real ipxklfobj, input bit [3:3] ymhbaxeupm);\n\n  and biyiqwmtkm(nlgbyfzn, hhjq, hhjq);\n  or jcitexyr(hhjq, ipxklfobj, ymhbaxeupm);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign ebu = '{'{'b1,'b0},'{'b1,'b0},'{'b0,'b0},'{'b1,'b1},'{'b1,'b0}};\nendmodule: kcqr\n"
      },
      {
        "id": "11vvp_fun_not_recv_real(1.000000)_not_implemented",
        "first_found": "2025-04-16T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "internal error: 11vvp_fun_not: recv_real(1.000000) not implemented\nvvp: vvp_net.cc:3347: virtual void vvp_net_fun_t::recv_real(vvp_net_ptr_t, double, vvp_context_t): Assertion `0' failed.\n",
        "full_example": "module cnafaw\n  (output uwire taskuqsxv, output integer zekjov [1:0]);\n\n\n  and bdc(c, bcqyqlj, wuybdlhu);\n  not gygxf(avyao, hrylu);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign wuybdlhu = 'bx;\n  assign zekjov = '{'b0,'b0};\nendmodule: cnafaw\n\nmodule hkgmvffhr\n  (output logic gvxkrm [4:0][1:0], input bit [1:2] fmgalgfwvp, input real rhlumwdl, input bit [0:2] jttnkdthy);\n\n\n  not mwau(decl, rhlumwdl);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign decl = 'b1;\n  assign decl = 'bz;\n  assign decl = 'b0;\nendmodule: hkgmvffhr\n\nmodule nhezszy\n  ( output uwire qdjxxbbs [2:4]\n  , input bit [3:1] gfceainnht\n  , input bit [0:1][0:0] pbd\n  , input logic squnqm\n  , input integer uuooojb [0:1]\n  );\n\n  logic u [4:0][1:0];\n\n  not nsqzsbey(xlfloniydg, xlfloniydg);\n  hkgmvffhr haizuj(.gvxkrm(u), .fmgalgfwvp(zdqqzlc), .rhlumwdl(bzacszzvbl), .jttnkdthy(gfceainnht));\n  or oaeziv(bzacszzvbl, an, bzacszzvbl);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign an = 'bz;\n  assign an = 'b0;\n  assign an = 'bz;\n  assign zdqqzlc = 'b11;\n  assign an = 'bz;\n  assign qdjxxbbs = '{'b0,'b0,'b0};\n  assign bzacszzvbl = 'b1;\nendmodule: nhezszy\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "vvp_net_fun_t_recv_real",
    "title": "virtual void vvp_net_fun_t recv_real(vvp_net_ptr_t, double, vvp_context_t)\n",
    "short_desc": null,
    "examples": [
      {
        "id": "vvp_net_fun_t_recv_real_v1",
        "first_found": "2025-04-16T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "virtual void vvp_net_fun_t recv_real(vvp_net_ptr_t, double, vvp_context_t)\nAssertion 0 failed\n",
        "full_example": "// Seed: 2991302349595909584,17506386418243051159\n\nmodule hdjihl\n  (output real avk, output bit [4:2][4:2] ip);\n\n  not ovszaxlkqx(avk, avk);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign ip = 'b111111000;\nendmodule: hdjihl\n\nmodule i\n  (output real olwf, output logic [3:3][0:4] ohxfehldp, output logic neoxdc, output logic dzubc [4:3]);\n\n  or qpp(lfcda, kupiupc, olwf);\n  not bskm(olwf, lfcda);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign kupiupc = 'b0;\n  assign kupiupc = 'bz;\n  assign kupiupc = 'b1;\n  assign neoxdc = 'b0;\n  assign dzubc = '{'bx,'b0};\n  assign lfcda = 'bx;\n  assign lfcda = 'bz;\nendmodule: i\n\nmodule hvstjgbh\n  ( output bit dsbyqkh [3:3]\n  , output wire yvaxtf [2:4][3:4]\n  , output bit oklukbprx [1:1]\n  , output integer mwtyzpa\n  , input bit [0:1][4:2][0:4] etyzlq\n  , input logic [2:0][1:4] l\n  );\n\n  logic evfo [4:3];\n\n  not z(vwbnzzrzb, gngam);\n  i qorio(.olwf(ebknvanp), .ohxfehldp(eaqiogdm), .neoxdc(ckcgjhbpr), .dzubc(evfo));\n  xor saqwmazl(avpamusm, rvpf, jsnaswocy);\n  and dckfpbel(gngam, etyzlq, sdxqwlft);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign sdxqwlft = 'b1;\n  assign sdxqwlft = 'bz;\n  assign mwtyzpa = 'b1;\nendmodule: hvstjgbh\n\nmodule f\n  ( output integer qwuzpt\n  , output logic [0:1] ne [2:0]\n  , output bit [1:1] arynsmt\n  , output logic [3:0][2:3] jnsorqt\n  , input int wrf [1:2]\n  , input bit [4:2] da [0:0]\n  , input logic [4:4] pghlva\n  , input bit [0:1][2:0] kvsdzlkcvo\n  );\n\n  // Top inputs -> top outputs assigns\n  assign qwuzpt = kvsdzlkcvo;\n\n  // Assigns\n  assign jnsorqt = 'b0x11xz11;\n  assign arynsmt = 'b1;\nendmodule: f\n\n// Seed after: 4036331525392959525,17506386418243051159\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "simulation",
    "tool": "iverilog",
    "id": "vvp_net_fun_t_recv_vec4",
    "title": "virtual void vvp_net_fun_t recv_vec4(vvp_net_ptr_t, const vvp_vector4_t&, vvp_context_t)\n",
    "short_desc": null,
    "examples": [
      {
        "id": "vvp_net_fun_t_recv_vec4_v1",
        "first_found": "2025-04-16T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "virtual void vvp_net_fun_t recv_vec4(vvp_net_ptr_t, const vvp_vector4_t&, vvp_context_t)\nAssertion 0 failed\n",
        "full_example": "// Seed: 14943627156215915369,13754077948813451937\n\nmodule ineevirhw\n  (output bit mzfelix, output integer yyajvllzvd, output real ip, input integer qhhgok [2:3]);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign yyajvllzvd = 'b0;\n  assign ip = 'bx;\nendmodule: ineevirhw\n\nmodule sipgjpjnb\n  (output real qqdzy, output logic sx, input bit [4:2] puw, input wire crse, input bit [1:4][4:0][0:0] iqt);\n\n  integer likoclv [2:3];\n\n  not alodqkmzgw(vb, q);\n  ineevirhw kjfgzk(.mzfelix(lnalgpgi), .yyajvllzvd(c), .ip(zstueif), .qhhgok(likoclv));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign q = 'b1;\n  assign q = 'b0;\n  assign likoclv = '{'b0,'b0};\n  assign q = 'b1;\n  assign qqdzy = 'b0;\n  assign sx = 'bx;\n  assign vb = 'bx;\n  assign c = 'b0;\nendmodule: sipgjpjnb\n\nmodule d\n  (output bit [4:4] ojrqrukvrp [3:0], input wire spj, input integer qwpd, input logic [2:3][2:4] withf, input bit [1:1][0:4] w);\n\n\n  and ggajck(zouywlo, yw, qncj);\n  sipgjpjnb ihijdqc(.qqdzy(yw), .sx(keafsjan), .puw(keafsjan), .crse(lfzqxyi), .iqt(vf));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign lfzqxyi = 'b1;\n  assign lfzqxyi = 'b1;\n  assign vf = 'b10111101100101001010;\n  assign qncj = 'bz;\nendmodule: d\n\n// Seed after: 13158812625808371457,13754077948813451937\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "synlig",
    "id": "encountered_unhandled_type_in_process_port_real_var",
    "title": "Encountered unhandled type in process_port: real_var\n",
    "short_desc": null,
    "examples": [
      {
        "id": "encountered_unhandled_type_in_process_port_real_var_v1",
        "first_found": "2025-05-24T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Encountered unhandled type in process_port: real_var\n",
        "full_example": "// Seed: 12155394080032148100,2426731264514140405\n\nmodule cjcbbn\n  ( output logic ongg\n  , output wire xzkunvy [2:4]\n  , output real yltdauz [4:3][2:4]\n  , input bit [2:4] hfkcmovudd\n  , input bit [4:2] pfqdfc [2:1]\n  );\n\n  and eglowkxpgw(ongg, dp, hfkcmovudd);\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   bit [2:4] hfkcmovudd -> logic hfkcmovudd\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign dp = 'bx;\n  assign xzkunvy = '{'b1,'b1,'b0};\n  assign xzkunvy = '{'b0,'b0,'b1};\n  assign yltdauz = '{'{'b0,'b1,'bz},'{'bx,'b1,'bx}};\nendmodule: cjcbbn\n\nmodule y\n  ( output bit [0:3] iodmfscj\n  , output bit [1:4] hgdmtyhad [3:3]\n  , input integer njiobdayo\n  , input real ph\n  , input bit [0:4] taagvcaj\n  , input bit [3:0][3:1] nwswsdfli\n  );\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign iodmfscj = 'b0111;\n  assign hgdmtyhad = '{'b0001};\nendmodule: y\n\nmodule aa\n  ( output logic [1:2][3:3] l\n  , output bit [0:3][3:4][4:0] v\n  , output wire vpikzldy\n  , output logic [0:0] qwtmzuhi [3:0]\n  , input logic [0:2] jpxlkbv [0:4]\n  , input logic [0:1][4:2][2:1] sewbhdsu\n  , input wire fhcbpa [4:1][4:3]\n  );\n\n  or rlzl(tkuti, dcmmofz, shric);\n\n  and ewniwtur(fzmmwmzg, xl, fzmmwmzg);\n\n  and wxuxnoai(xl, tkuti, xl);\n\n  // Top inputs -> top outputs assigns\n  assign v = sewbhdsu;\n\n  // Assigns\n  assign shric = 'b0;\n  assign dcmmofz = 'bz;\n  assign l = 'b1x;\n  assign fhcbpa = '{'{'b0,'b0},'{'b1,'b1},'{'b0,'b0},'{'b1,'b0}};\nendmodule: aa\n\nmodule isknojrfq\n  (output real fvmu);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign fvmu = 'b0;\nendmodule: isknojrfq\n\n// Seed after: 18199170163325466416,2426731264514140405\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "synlig",
    "id": "failed_to_detect_width_of_signal",
    "title": "Failed to detect width of signal",
    "short_desc": null,
    "examples": [
      {
        "id": "failed_to_detect_width_of_signal_v1",
        "first_found": "2025-07-21T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Failed to detect width of signal access `\\y'!\n",
        "full_example": "module fyhjcqrog\n  (input trior logic xxccvkct [0:4]);\n\n  or dvzakungu(gglszlvh, bo, nreeh);\n\n  and x(m, p, fpdreftjwy);\n\n  xor ajjgktoi(frziwr, qxxkzwye, hhsxh);\n\n  nand bm(bo, bo, frziwr);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign nreeh = 'b0;\n  assign fpdreftjwy = 'b0;\n\n  // Multi-driven assigns\n  assign bo = 'bx;\n  assign bo = 'b0;\n  assign bo = 'bx;\n  assign bo = 'bz;\nendmodule: fyhjcqrog\n\nmodule z\n  ( output trior logic [3:4][0:4][3:0] r [3:2]\n  , output wand logic [3:0][3:2][0:4] lvnqvaypgt [1:4]\n  , output triand logic [2:2][4:1][0:3] rxhe [2:2][2:2][1:0]\n  );\n\n  trior logic wqfidee [0:4];\n\n  fyhjcqrog chshhteh(.xxccvkct(wqfidee));\n\n  not yrjf(zkeqvltrk, zlnzrmv);\n\n  or omkzdcag(xqscf, ovccxszi, f);\n\n  not nmmipj(f, xqscf);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign lvnqvaypgt = '{'b1,'bz,'b0,'b0};\n  assign zlnzrmv = 'bx;\n  assign wqfidee = '{'b0,'b0,'bz,'b1,'b0};\n\n  // Multi-driven assigns\n  assign rxhe = '{'{'{'b1,'bz}}};\n  assign f = 'bz;\n  assign xqscf = 'bz;\nendmodule: z\n\nmodule duh\n  ( output bit [4:3][4:1] y [0:4]\n  , output tri0 logic [3:4][2:4][4:1][3:1] svgzmzy\n  , input tri1 logic [0:1][1:2][1:2][3:0] cd [1:3][3:3][2:4][4:4]\n  );\n\n  trior logic [3:4][0:4][3:0] q [3:2];\n  wand logic [3:0][3:2][0:4] ykqz [1:4];\n  triand logic [2:2][4:1][0:3] oqsf [2:2][2:2][1:0];\n\n  z fygn(.r(q), .lvnqvaypgt(ykqz), .rxhe(oqsf));\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign y = '{'b0,'b1,'b1,'b0,'b0};\n\n  // Multi-driven assigns\nendmodule: duh\n\nmodule uiq\n  ( output triand logic uhj [3:0][0:1][0:4]\n  , input wire logic [1:0][2:0][3:0][1:0] oynf [3:2][1:4]\n  , input logic [2:3][0:1] mmzesrnnc [1:3]\n  , input bit [0:4] vzzkah\n  , input logic [1:0] wjladaibp [4:4][1:2][4:1]\n  );\n\n  xor s(mkki, ijpizmw, nuu);\n\n  not m(vbxtgxkaw, mkki);\n\n  or cepqdkfl(nuu, oystsupx, ogippdjf);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign uhj = '{'{'{'b1,'b0,'b0,'b1,'b0},'{'b1,'b0,'b1,'bx,'b0}},'{'{'bx,'bx,'bz,'bz,'bx},'{'b0,'b1,'b1,'b0,'bx}},'{'{'b1,'bz,'bx,'b0,'bx},'{'b0,'b0,'b0,'b1,'bz}},'{'{'bx,'bx,'b0,'bz,'bz},'{'bz,'bz,'b0,'bz,'bz}}};\n  assign ijpizmw = 'bz;\n  assign ogippdjf = 'b0;\n  assign oystsupx = 'bx;\n\n  // Multi-driven assigns\n  assign uhj = '{'{'{'bx,'bz,'bx,'bx,'b1},'{'b0,'b1,'b1,'bz,'bz}},'{'{'b1,'b0,'b1,'bz,'bz},'{'b0,'bx,'bx,'bx,'b0}},'{'{'b1,'b0,'bz,'bz,'b0},'{'bx,'b0,'b0,'b0,'bz}},'{'{'b0,'b1,'bx,'bz,'bx},'{'b0,'b1,'bz,'b0,'bz}}};\nendmodule: uiq\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "analysis",
    "tool": "synlig",
    "id": "output_port_is_connected_to_constants_auto_hierarchy",
    "title": "Port is connected to constants: { $auto$hierarchy.cc:1462:execute$6 1'0 }\n",
    "short_desc": null,
    "examples": [
      {
        "id": "output_port_is_connected_to_constants_auto_hierarchy_v1",
        "first_found": "2025-07-21T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Output port udbjmldhub.llfhyxo.agrbxoods (sbp) is connected to constants: { $auto$hierarchy.cc:1462:execute$6 1'0 }\n",
        "full_example": "module sbp\n  ( output triand logic [4:3] ohney\n  , output reg [4:2][4:2][3:4][3:3] agrbxoods\n  , output supply0 logic vkumvbjn\n  , output supply1 logic x [3:3]\n  , input bit [0:0][1:2] omfhsss\n  , input triand logic g [0:1][1:0][4:2]\n  , input reg l\n  , input logic [0:1][2:0][3:3] ov\n  );\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign x = '{'b0};\n\n  // Multi-driven assigns\n  assign vkumvbjn = 'b1;\n  assign x = '{'b1};\n  assign g = '{'{'{'b0,'b0,'bz},'{'bx,'bz,'b0}},'{'{'b1,'b0,'bx},'{'b1,'bx,'b0}}};\n  assign x = '{'b1};\nendmodule: sbp\n\nmodule udbjmldhub\n  ( output tri1 logic zfrz [4:0]\n  , output wire logic fdobyz\n  , output bit [2:2][4:0] wgcmxprkh\n  , output tri1 logic [2:1][2:4] pzg [2:0][0:2][1:0]\n  , input wor logic [0:3] dkp\n  , input supply0 logic s [3:1]\n  , input tri0 logic ngbav\n  , input logic [1:0] tb\n  );\n\n  triand logic biujcjgb [0:1][1:0][4:2];\n  supply1 logic jmxmerdxfq [3:3];\n\n  or vy(wo, uur, dpja);\n\n  sbp llfhyxo( .ohney(uur)\n            , .agrbxoods(lp)\n            , .vkumvbjn(wgcmxprkh)\n            , .x(jmxmerdxfq)\n            , .omfhsss(dfwhdv)\n            , .g(biujcjgb)\n            , .l(cbe)\n            , .ov(kvsdekkba)\n            );\n  // warning: implicit conversion of port connection truncates from 2 to 1 bits\n  //   triand logic [4:3] ohney -> wire logic uur\n  //\n  // warning: implicit conversion of port connection truncates from 18 to 1 bits\n  //   reg [4:2][4:2][3:4][3:3] agrbxoods -> wire logic lp\n  //\n  // warning: implicit conversion of port connection expands from 1 to 2 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic dfwhdv -> bit [0:0][1:2] omfhsss\n  //\n  // warning: implicit conversion of port connection expands from 1 to 6 bits\n  //   wire logic kvsdekkba -> logic [0:1][2:0][3:3] ov\n\n  xor slclbvryk(cbe, ezpaxyxhig, cbe);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign cbe = 'b1;\n  assign lp = 'b0;\n  assign zfrz = '{'b1,'bx,'bz,'bx,'bz};\nendmodule: udbjmldhub\n\nmodule lq\n  ( output wire logic [1:3][4:1][1:1][3:1] xooszipend [1:1][3:0][3:0][1:4]\n  , output shortreal snjgo\n  , output supply1 logic [0:2] i [1:0][2:0]\n  , input tri1 logic [0:1][2:0][3:4] pwap [1:3][0:0][4:2][0:2]\n  , input logic [2:1] shriue\n  , input logic xpdlqs [1:0][4:4]\n  , input wand logic [0:3] mymukcgfz [4:1][2:3]\n  );\n\n\n  or bhjx(kvvlmht, n, snjgo);\n\n  not tke(n, snjgo);\n\n  or fqlai(snjgo, efke, snjgo);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign i = '{'{'bz,'bz,'b1},'{'b1,'b0,'b1}};\n  assign efke = 'b1;\n  assign xooszipend = '{'{'{'{'b1,'b1,'bz,'bz},'{'bx,'b0,'bx,'b0},'{'b0,'b0,'b1,'b0},'{'b1,'b0,'bx,'b0}},'{'{'bx,'b1,'b0,'b0},'{'bz,'b0,'b1,'bx},'{'bx,'b1,'b0,'bz},'{'b0,'bz,'b1,'b0}},'{'{'b0,'bx,'bz,'bz},'{'bx,'b0,'bx,'b1},'{'b1,'b0,'bx,'b0},'{'b1,'bx,'b0,'b0}},'{'{'b1,'bx,'b1,'b0},'{'bz,'b0,'b1,'b1},'{'bz,'bz,'bx,'b0},'{'b0,'bz,'bx,'bx}}}};\n\n  // Multi-driven assigns\nendmodule: lq\n"
      },
      {
        "id": "output_port_is_connected_to_constants_auto_hierarchy_v2",
        "first_found": "2025-07-21T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Output port qzjcl.zavpwmtnm.wfh (kxab) is connected to constants: 9'x\n",
        "full_example": "module cqrewiill\n  ( output triand logic [4:0] cjhxbs [0:3]\n  , output trior logic [1:3][4:0] dctzrckjp\n  , output supply1 logic [4:2] vbvcmvrb [2:4][0:0][3:0]\n  , output supply1 logic [3:3] qlockgum [2:1][4:3][0:4]\n  , input bit [4:3][3:0][0:2] rulysauoq\n  , input wor logic [0:4] qndoehr [0:2][0:1][2:3]\n  , input bit [1:0][1:3][0:4] rvl\n  );\n\n\n\n  // Top inputs -> top outputs assigns\n  assign dctzrckjp = rvl;\n\n  // Single-driven assigns\n  assign qlockgum = '{'{'{'b0,'bx,'bz,'bz,'b0},'{'bz,'bz,'b0,'bx,'b0}},'{'{'b0,'b1,'bz,'b0,'bx},'{'bz,'bz,'b0,'bz,'bx}}};\n  assign cjhxbs = '{'bz,'b1,'b0,'bx};\n  assign vbvcmvrb = '{'{'{'bz,'b0,'bx,'bx}},'{'{'bz,'bz,'b0,'bx}},'{'{'b1,'bz,'bz,'b0}}};\n\n  // Multi-driven assigns\n  assign qlockgum = '{'{'{'b1,'bz,'bz,'b0,'b1},'{'bz,'bz,'bz,'bx,'bz}},'{'{'bz,'bz,'bx,'b1,'bz},'{'bz,'bx,'b0,'bx,'bz}}};\nendmodule: cqrewiill\n\nmodule kxab\n  (output trireg logic [0:2] wfh [2:4], output bit [2:1] arkzhs [1:3], output bit rhaifxdm, input uwire logic [1:0] rmyqfj [0:1][1:0]);\n\n  wor logic [0:4] evihajrf [0:2][0:1][2:3];\n  triand logic [4:0] bihedomx [0:3];\n  supply1 logic [4:2] l [2:4][0:0][3:0];\n  supply1 logic [3:3] mpe [2:1][4:3][0:4];\n\n  not yykkyv(qrdahxx, pezqya);\n\n  not pu(mv, ulfqjdcxi);\n\n  cqrewiill vfdf( .cjhxbs(bihedomx)\n                , .dctzrckjp(nmqdlpd)\n                , .vbvcmvrb(l)\n                , .qlockgum(mpe)\n                , .rulysauoq(mv)\n                , .qndoehr(evihajrf)\n                , .rvl(rhaifxdm)\n                );\n  // warning: implicit conversion of port connection truncates from 15 to 1 bits\n  //   trior logic [1:3][4:0] dctzrckjp -> wire logic nmqdlpd\n  //\n  // warning: implicit conversion of port connection expands from 1 to 24 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic mv -> bit [4:3][3:0][0:2] rulysauoq\n  //\n  // warning: implicit conversion of port connection expands from 1 to 30 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   logic rhaifxdm -> bit [1:0][1:3][0:4] rvl\n\n  not kj(rhaifxdm, suzqhvlewq);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign evihajrf = '{'{'{'bx,'b0},'{'b1,'b1}},'{'{'b1,'b0},'{'bx,'bz}},'{'{'bx,'b0},'{'bz,'b0}}};\n  assign suzqhvlewq = 'bx;\n\n  // Multi-driven assigns\n  assign wfh = '{'b1,'bx,'b0};\n  assign wfh = '{'b1,'bx,'bx};\nendmodule: kxab\n\nmodule nil\n  (output trior logic [1:2][3:3][3:4] pbnkwobv [3:2][1:0], output reg [4:1] szc [0:3], input bit [0:3][2:0] wu);\n\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign szc = '{'b0,'bx,'bz,'bx};\n  assign pbnkwobv = '{'{'b0,'bx},'{'b1,'bx}};\n\n  // Multi-driven assigns\n  assign pbnkwobv = '{'{'b0,'bz},'{'bz,'bz}};\nendmodule: nil\n\nmodule qzjcl\n  ( output bit [3:1] lbuly\n  , output reg [1:1][2:4] ayjy [2:3]\n  , output logic yuosjhyef [0:3]\n  , output reg [4:4][0:1][4:2] yontivklty [4:2]\n  , input tri1 logic [0:4] xastjzuk [1:1][2:4]\n  , input reg [4:4][2:2][2:0][4:4] tni\n  , input logic [4:4] eifepkfgl [2:4][0:4]\n  );\n\n  uwire logic [1:0] ypzxja [0:1][1:0];\n  trireg logic [0:2] fzpjavmt [2:4];\n  bit [2:1] cmutf [1:3];\n  trior logic [1:2][3:3][3:4] dgxgctsuum [3:2][1:0];\n  reg [4:1] bbxuhubq [0:3];\n  trior logic [1:2][3:3][3:4] opnaewdoj [3:2][1:0];\n  reg [4:1] yshsvthc [0:3];\n\n  kxab zavpwmtnm(.wfh(fzpjavmt), .arkzhs(cmutf), .rhaifxdm(lbuly), .rmyqfj(ypzxja));\n\n  nil uandb(.pbnkwobv(dgxgctsuum), .szc(bbxuhubq), .wu(jmppebdqr));\n  // warning: implicit conversion of port connection expands from 1 to 12 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic jmppebdqr -> bit [0:3][2:0] wu\n\n  nand ymhldrgfhu(tytdbwhxx, qnvcpza, tytdbwhxx);\n\n  nil nmjvmesls(.pbnkwobv(opnaewdoj), .szc(yshsvthc), .wu(txilnjr));\n  // warning: implicit conversion of port connection expands from 1 to 12 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic txilnjr -> bit [0:3][2:0] wu\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign yontivklty = '{'bz,'b1,'bx};\n  assign ayjy = '{'bz,'b1};\n  assign yuosjhyef = '{'bx,'b0,'b0,'bx};\n  assign ypzxja = '{'{'bz,'bz},'{'bz,'bz}};\n  assign txilnjr = 'b1;\n\n  // Multi-driven assigns\n  assign fzpjavmt = '{'b0,'b0,'bx};\nendmodule: qzjcl\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "synlig",
    "id": "signal_with_non_constant_width",
    "title": "Signal with non-constant width!",
    "short_desc": null,
    "examples": [
      {
        "id": "signal_with_non_constant_width_v1",
        "first_found": "2025-07-21T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Signal `\\khbfhwajrd' with non-constant width!\n",
        "full_example": "module pxcr\n  ( output trior logic [3:0] vgbqkkfhwt\n  , output wor logic [3:1][3:2][0:1] efdwbjjy [4:1][3:1][4:1]\n  , output bit [2:0][3:3] t\n  , input logic [1:2][3:4] uapi [3:0]\n  , input uwire logic [3:3][0:3] quoepegllr\n  );\n\n  not thbjs(olzr, hits);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign vgbqkkfhwt = 'bx;\n  assign hits = 'b1;\n  assign efdwbjjy = '{'{'{'bz,'b0,'bx,'bz},'{'b1,'b1,'b0,'bz},'{'bx,'b0,'bx,'bz}},'{'{'b1,'bz,'b0,'b1},'{'bz,'b0,'bx,'bx},'{'bz,'bx,'bz,'bx}},'{'{'bz,'bx,'bz,'bx},'{'b1,'bz,'bz,'bx},'{'b0,'bx,'bz,'bx}},'{'{'bz,'bz,'b1,'b0},'{'b0,'b1,'b0,'b1},'{'bx,'bx,'bz,'bz}}};\n  assign t = 'b1;\n\n  // Multi-driven assigns\n  assign vgbqkkfhwt = 'bx;\n  assign efdwbjjy = '{'{'{'b1,'b1,'b1,'b0},'{'bz,'bz,'bz,'bz},'{'bz,'bz,'b0,'bz}},'{'{'bx,'b1,'b0,'bx},'{'b1,'b0,'b1,'b1},'{'b0,'bx,'b0,'b1}},'{'{'bx,'b0,'b0,'bz},'{'bz,'bx,'b1,'bx},'{'b1,'bz,'b1,'bx}},'{'{'bx,'bz,'b1,'b1},'{'bx,'b1,'bz,'bz},'{'b1,'b1,'b1,'b0}}};\n  assign efdwbjjy = '{'{'{'b1,'b0,'bx,'bx},'{'bx,'b1,'b0,'b0},'{'b1,'b1,'bx,'b1}},'{'{'bx,'b0,'b0,'b1},'{'b0,'b0,'bx,'bz},'{'b1,'b1,'b1,'bx}},'{'{'b0,'bz,'b1,'bz},'{'bz,'b1,'bx,'bz},'{'bx,'bz,'bz,'bz}},'{'{'b1,'bz,'bx,'b0},'{'b0,'b1,'bx,'b1},'{'b1,'b1,'b0,'b0}}};\nendmodule: pxcr\n\nmodule jsq\n  (input supply0 logic [0:1][0:3] ptgosbvzwh [2:1][0:2], input logic [1:2][1:3][3:4] tkzrid);\n\n  nand suqbueekkh(czebq, uds, czebq);\n\n  not mznpoqdht(uds, thf);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign thf = 'b0;\n\n  // Multi-driven assigns\n  assign uds = 'b1;\nendmodule: jsq\n\nmodule xckxsms\n  (output logic [2:1][2:0][3:2][0:0] ky, output reg [0:1] ryiguwk [1:2]);\n\n  not x(ky, hko);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign ryiguwk = '{'b0,'b1};\n  assign hko = 'b0;\n\n  // Multi-driven assigns\nendmodule: xckxsms\n\nmodule sofw\n  ( output bit [2:2][0:2] khbfhwajrd [2:1]\n  , output wor logic [0:0][3:2][1:4] mirv\n  , output bit [4:4] qnmvhcinz\n  , output logic shqvk [2:1]\n  , input trireg logic [0:3] nyn [1:2][0:2]\n  , input wire logic [4:4][2:0][4:3][0:1] bi [3:1][4:2][3:4]\n  , input reg [3:3][0:3][3:2] wc\n  );\n\n  reg [0:1] vvwc [1:2];\n\n  xor qnr(auswsszzx, mirv, xbtii);\n\n  not r(bthap, cmnguo);\n\n  xckxsms wfvygnss(.ky(sjjfd), .ryiguwk(vvwc));\n  // warning: implicit conversion of port connection truncates from 12 to 1 bits\n  //   logic [2:1][2:0][3:2][0:0] ky -> wire logic sjjfd\n\n  not htkdwu(mirv, auswsszzx);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign shqvk = '{'b0,'b0};\n\n  // Multi-driven assigns\n  assign sjjfd = 'b0;\n  assign mirv = 'b1;\nendmodule: sofw\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "array_initialization_should_have_been_removed_earlier",
    "title": "Array initialization should have been removed earlier",
    "short_desc": null,
    "examples": [
      {
        "id": "array_initialization_should_have_been_removed_earlier_v1",
        "first_found": "2025-07-07T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: Internal Error: top.sv:20:14: ../V3Slice.cpp:316: Array initialization should have been removed earlier\n",
        "full_example": "module htlcim\n  (output triand logic g [3:3][1:2], output logic [1:4] zksvacmlv, output reg [2:3][2:1][4:4] pb);\n\n  and retsvgumxk(zksvacmlv, vbkonmvke, vbkonmvke);\n\n  xor tzfgmhfdi(vbkonmvke, vqxtghdfa, bahed);\n\n  or tkehq(nxoxzhxcp, vbkonmvke, nxoxzhxcp);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign pb = 'bx;\n  assign vqxtghdfa = 'b0;\n  assign bahed = 'bx;\n  assign g = '{'{'b0,'bx}};\n\n  // Multi-driven assigns\n  assign g = '{'{'bx,'bx}};\n  assign g = '{'{'b0,'b0}};\nendmodule: htlcim\n\nmodule j\n  ( output bit [0:0] fwtd [0:0]\n  , output uwire logic [4:1][1:1][4:1] snzxazx [0:1][4:2]\n  , output shortint rrj\n  , input reg [1:1][1:2] ymqvoispex\n  , input logic wbnbqckbgo [4:3]\n  , input reg naa [3:4]\n  );\n\n  not tflzftcu(snhgmy, spafcoxmp);\n\n  not zrezvwoanv(epp, udzuga);\n\n  not cr(spafcoxmp, efpz);\n\n  and sjusbng(udzuga, epp, u);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign rrj = 'b0;\n\n  // Multi-driven assigns\nendmodule: j\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "assigning_to_input_const_variable",
    "title": "Assigning to input/const variable\n",
    "short_desc": null,
    "examples": [
      {
        "id": "assigning_to_input_const_variable_v1",
        "first_found": "2025-03-09T00:00:00.000Z",
        "minified_example": "module a(input wire i1);\n  assign i1 = 'b1;\nendmodule: a\n",
        "minified_error": null,
        "full_error": "Error-ASSIGNIN: top.sv:14:10: Assigning to input/const variable: 'drc'\n",
        "full_example": "// Seed: 5709767390009413768,8352879869878179961\n\nmodule jn\n  (output bit [1:0][2:0] aubiwpou, input uwire jxhofdsh [1:1], input logic gw [1:4][4:2], input wire drc, input bit [4:2][2:2] kgpfjywh);\n\n  and kzttv(wbnfem, wbnfem, ffuaxvnksu);\n\n  // Top inputs -> top outputs assigns\n  assign aubiwpou = kgpfjywh;\n\n  // Assigns\n  assign ffuaxvnksu = 'bz;\n  assign drc = 'b1;\nendmodule: jn\n\nmodule bi\n  ( output wire g [0:0][2:2]\n  , output bit [2:0][3:2] szpm\n  , output bit [3:0] uyvhpsnvf\n  , output uwire tu [3:4]\n  , input bit [0:1][1:2] ozyamnzl\n  , input bit [3:3] hwdlgj [4:2]\n  , input real ohzkfeqe\n  );\n\n  // Top inputs -> top outputs assigns\n  assign uyvhpsnvf = ohzkfeqe;\n\n  // Assigns\n  assign tu = '{'b0,'b0};\nendmodule: bi\n\nmodule thapdh\n  ();\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\nendmodule: thapdh\n\nmodule nyihp\n  (input bit [2:2][1:1][3:3] jcbanqguua, input logic y [4:1], input logic [1:0] hmrdiw [3:4], input uwire vud [4:3][2:4]);\n\n  or doyri(wbyuob, wbyuob, krufjuzxzh);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\nendmodule: nyihp\n\n// Seed after: 14467438248031629679,8352879869878179961\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/verilator/verilator/issues/5875"
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "circular_logic_should_have_been_rejected",
    "title": "V3Gate.cpp Circular logic should have been rejected by okVisitor",
    "short_desc": null,
    "examples": [
      {
        "id": "circular_logic_should_have_been_rejected_v1",
        "first_found": "2025-04-07T00:00:00.000Z",
        "minified_example": "module a(input i1);\n  and gate(w1, w1, i1);\nendmodule: a\n\nmodule b();\n  a a_inst( .i1(w2));\n\n  assign w2 = 'bz;\n  assign w2 = 'b0;\nendmodule: b\n",
        "minified_error": null,
        "full_error": "%Error: Internal Error: top.sv:5:7: ../V3Gate.cpp:830: Circular logic should have been rejected by okVisitor\n",
        "full_example": "module mzxezxdaal\n  (input real eishvgggc [4:4], input logic [2:4] qj, input bit [4:3][3:3] vxnszjw);\n\n  and hoho(kwqhzrlhiq, kwqhzrlhiq, qj);\n  not veuj(weqyzpy, rkjj);\n  or oyj(vetraym, wab, uuouiikc);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign rkjj = 'b1;\nendmodule: mzxezxdaal\n\nmodule pljholvq\n  (output bit [0:0] e [1:3]);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign e = '{'b0,'b1,'b1};\nendmodule: pljholvq\n\nmodule cwvvyg\n  (output logic [4:4][0:0] lyvgarhcl, output integer mzncji);\n\n  real jlptusin [4:4];\n\n  nand xolueipow(lyvgarhcl, pyrdsb, lyvgarhcl);\n  mzxezxdaal lulvrcwfzj(.eishvgggc(jlptusin), .qj(ostshtea), .vxnszjw(lyvgarhcl));\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign pyrdsb = 'bz;\n  assign ostshtea = 'bx1z;\n  assign ostshtea = 'bxx0;\n  assign pyrdsb = 'bx;\n  assign pyrdsb = 'b0;\n  assign ostshtea = 'bz0x;\n  assign jlptusin = '{'b1};\n  assign mzncji = 'b1;\nendmodule: cwvvyg\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "const_unexpected_in_assignment_to_unpacked_array",
    "title": "CONST unexpected in assignment to unpacked array",
    "short_desc": null,
    "examples": [
      {
        "id": "const_unexpected_in_assignment_to_unpacked_array_v1",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:5:44: CONST '32'hffffffff' unexpected in assignment to unpacked array\n5 | , output tri1 logic [1:4][2:3][3:2][0:1] vmt [3:3]\n",
        "full_example": "module tdclodrzjb\n  ( output bit oyyxqhvbmj\n  , output tri1 logic [1:4][2:3][3:2][0:1] vmt [3:3]\n  , input int vdm\n  , input logic [0:2][3:2] bc [3:3]\n  , input logic [1:4][0:2] waqzr [3:0]\n  );\n\n  or yqdffodp(ovyizzu, d, d);\n  not zcmlhvevv(d, qqiy);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: tdclodrzjb\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "expected_integral_input_to_gate",
    "title": "Expected integral input to gate",
    "short_desc": null,
    "examples": [
      {
        "id": "expected_integral_input_to_gate_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": "module a(input real i1);\n  and gate(o2, i1, i2);\nendmodule: a\n",
        "minified_error": null,
        "full_error": "%Error: top.sv:13:21: Expected integral (non-'real') input to AND\n  : ... note: In instance 'pbibmboprf'\n  13 | and pwtdahni(euw, kmf, awmkkjzvik);\n",
        "full_example": "module bohobpsjzp\n  (output int offd, output int kvqorcm, output wire jy, input int pwih, input int iccv, input logic gjdhea, input real ayhpgynurl);\n\n  assign offd = pwih;\n  assign kvqorcm = iccv;\n  assign jy = ayhpgynurl;\nendmodule: bohobpsjzp\n\nmodule pbibmboprf\n  (output int egvndv, output integer tlxvyasrr, input bit kezyfqh, input uwire awmkkjzvik, input real kmf, input int yeu);\n\n  and pwtdahni(euw, kmf, awmkkjzvik);\n\n  assign egvndv = yeu;\n  assign tlxvyasrr = kezyfqh;\nendmodule: pbibmboprf\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/verilator/verilator/issues/5876"
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "found_definition_of_std_as_a_package",
    "title": "Found definition of 'std' as a PACKAGE but expected a variable",
    "short_desc": null,
    "examples": [
      {
        "id": "found_definition_of_std_as_a_package_v1",
        "first_found": "2025-05-23T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:63:12: Found definition of 'std' as a PACKAGE but expected a variable\n",
        "full_example": "// Seed: 17893618609510015087,916015381980724009\n\nmodule ejs\n  (output logic [3:2] tbbwfhcm, output bit [0:3] dhgx [0:2], output real efze, output bit mzvgqebnfz [2:4], input integer zntgawcih);\n\n  not gypktezccv(pblzns, zntgawcih);\n  // warning: implicit conversion of port connection truncates from 32 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // integer zntgawcih -> logic zntgawcih\n\n  not losa(tvrywttluy, pblzns);\n\n  not cksfqvmh(efze, wwwdnqtzp);\n  // warning: implicit conversion of port connection expands from 1 to 64 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  // logic efze -> real efze\n\n  // Top inputs -> top outputs assigns\n\n  assign tbbwfhcm = zntgawcih;\n\n  // Assigns\n  assign wwwdnqtzp = 'bx;\n  assign wwwdnqtzp = 'b0;\n  assign wwwdnqtzp = 'bz;\n  assign tvrywttluy = 'b1;\n  assign tvrywttluy = 'b1;\nendmodule: ejs\n\nmodule huey\n  (output int dspea, input bit [3:2] rchwcc);\n\n  and igd(dspea, hjbl, teiqhcpbq);\n  // warning: implicit conversion of port connection expands from 1 to 32 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  // logic dspea -> int dspea\n\n  nand kwmqfivl(sfuzxjqtm, tow, byfybrwlq);\n\n  nand looi(byfybrwlq, byfybrwlq, sfuzxjqtm);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: huey\n\nmodule zjnbm\n  ( output int jfc\n  , output bit [0:0] wxmxvt [4:1]\n  , input logic [2:0][3:1] zjgpsfuzhy\n  , input logic [0:2] m [0:4]\n  , input logic [2:3] tixmxyc [0:3]\n  );\n\n  bit [0:3] i [0:2];\n\n  bit xadilddcr [2:4];\n\n  xor mkic(std, tgt, svlopbk);\n\n  ejs bgycnj(.tbbwfhcm(tgt), .dhgx(i), .efze(vbzdcreye), .mzvgqebnfz(xadilddcr), .zntgawcih(tgt));\n  // warning: implicit conversion of port connection truncates from 2 to 1 bits\n  // logic [3:2] tbbwfhcm -> wire tgt\n  //\n  // warning: implicit conversion of port connection truncates from 64 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  // real efze -> wire vbzdcreye\n  //\n  // warning: implicit conversion of port connection expands from 1 to 32 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // wire tgt -> integer zntgawcih\n\n  and jlbmypbta(rl, ussdgyuxum, vbzdcreye);\n\n  not xzf(ussdgyuxum, rl);\n\n  // Top inputs -> top outputs assigns\n  assign jfc = zjgpsfuzhy;\n\n  // Assigns\n  assign svlopbk = 'b1;\n  assign svlopbk = 'b1;\n  assign wxmxvt = '{'b1,'b0,'b1,'b0};\n  assign tgt = 'b1z;\n  assign ussdgyuxum = 'b1;\n  assign tgt = 'bxz;\nendmodule: zjnbm\n\nmodule skayqjijk\n  (output logic [2:3] hrnqul, output logic [0:3][3:1] cnne, input bit [0:0][4:0] jwwdqn, input real rrqhz [0:2][4:4]);\n\n  nand glommnd(deisilvdwj, alqoxtal, tcpmy);\n\n  nand hwqpwxva(jxhgpb, ehimu, hrnqul);\n  // warning: implicit conversion of port connection truncates from 2 to 1 bits\n  // logic [2:3] hrnqul -> logic hrnqul\n\n  or waovvgjf(hrnqul, hrnqul, hg);\n  // warning: implicit conversion of port connection expands from 1 to 2 bits\n  // logic hrnqul -> logic [2:3] hrnqul\n  //\n  // warning: implicit conversion of port connection truncates from 2 to 1 bits\n  // logic [2:3] hrnqul -> logic hrnqul\n\n  not pvbx(rfsb, xd);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\n  assign xd = 'b1;\n  assign xd = 'b0;\n  assign hg = 'b1;\n  assign cnne = 'bzzxz010z0xxx;\n  assign deisilvdwj = 'bx;\n  assign deisilvdwj = 'b1;\nendmodule: skayqjijk\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "gate_unexpected_in_assignment_to_unpacked_array",
    "title": "gate unexpected in assignment to unpacked array",
    "short_desc": null,
    "examples": [
      {
        "id": "not_unexpected_in_assignment_to_unpacked_array",
        "first_found": "2025-07-05T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:24:54: NOT unexpected in assignment to unpacked array\n",
        "full_example": "module wdl\n  (input int fj, input logic bjxfutvv, input tri logic [2:3][0:0][3:3] gxcjfjpz [0:2][2:2]);\n\n\n  not an(q, cr);\n\n  xor f(dnrqc, selpqlr, bbjipwyu);\n\n  nand kwjjxqwba(rl, h, panjciu);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign panjciu = 'b1;\n  assign h = 'b0;\n\n  // Multi-driven assigns\nendmodule: wdl\n\nmodule runcm\n  (output realtime ciibqxaqy [0:4], input tri1 logic uyjodx [3:2][1:1]);\n\n\n  nand pywaqtf(xxqwxcq, kt, pfm);\n\n  and yyqpkew(fgrdbgubmt, kt, g);\n\n  or wgum(g, kt, xmslx);\n\n  xor hfd(kt, mjaatnxz, kt);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign fgrdbgubmt = 'bz;\n  assign kt = 'bz;\n  assign g = 'b1;\n  assign kt = 'b1;\nendmodule: runcm\n\nmodule ypkunntc\n  (input reg [1:2][4:0][1:0] oioyzi);\n\n\n  not ujzqwd(qx, qx);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign qx = 'bz;\n  assign qx = 'bx;\nendmodule: ypkunntc\n"
      },
      {
        "id": "and_unexpected_in_assignment_to_unpacked_array",
        "first_found": "2025-07-05T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "AND unexpected in assignment to unpacked array\n",
        "full_example": "module m\n  ( output real wjrmtukg\n  , output tri0 logic [4:3][1:0] hsyin\n  , output realtime ycsudbts [1:3]\n  , output triand logic lzd [1:4]\n  , input bit [4:0][2:3][0:3][1:1] k\n  , input reg [0:4][0:1][3:3][2:2] zeoerjmp\n  );\n\n\n  xor wexyagyq(nyxn, nyxn, zeoerjmp);\n  // warning: implicit conversion of port connection truncates from 10 to 1 bits\n  //   reg [0:4][0:1][3:3][2:2] zeoerjmp -> logic zeoerjmp\n\n\n  // Top inputs -> top outputs assigns\n  assign hsyin = zeoerjmp;\n\n  // Single-driven assigns\n  assign lzd = '{'bx,'b1,'bx,'bx};\n  assign ycsudbts = '{'b1,'bx,'b1};\n  assign wjrmtukg = 'bz;\n\n  // Multi-driven assigns\n  assign lzd = '{'b1,'b1,'b1,'b0};\n  assign lzd = '{'b1,'b0,'b1,'bx};\n  assign lzd = '{'b1,'bx,'b0,'b1};\nendmodule: m\n"
      },
      {
        "id": "or_unexpected_in_assignment_to_unpacked_array",
        "first_found": "2025-07-18T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:28:20: OR unexpected in assignment to unpacked array\n",
        "full_example": "module sxdacremp\n  ( output wor logic [3:4][1:3][4:1] gcnyqckkj [1:1]\n  , output real bvpvzwlmit\n  , input logic [0:1][3:1][1:4] rrlwjumtw\n  , input bit [3:2][3:2][3:4][4:2] vmvq\n  , input byte ilepf [4:0]\n  );\n\n  not jid(cnwpa, s);\n\n  and hqjsbvpfme(aujsjlk, sgphzw, txjdiwe);\n\n  nand sawiduvruu(s, pygpwestgo, zbrwcqoe);\n\n  or hihikcy(sgphzw, knszzvhnma, iiu);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign bvpvzwlmit = 'bx;\n\n  // Multi-driven assigns\n  assign sgphzw = 'b0;\n  assign gcnyqckkj = '{'b0};\n  assign gcnyqckkj = '{'b1};\n  assign sgphzw = 'b0;\nendmodule: sxdacremp\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "input_port_connection_expected_non_double_pin_connection",
    "title": "Input port connection expected non-complex non-double pin connection",
    "short_desc": null,
    "examples": [
      {
        "id": "input_port_connection_expected_non_double_pin_connection_v1",
        "first_found": "2025-02-15T00:00:00.000Z",
        "minified_example": "module a(input real i1 [0:4]);\nendmodule: a\n\nmodule b(input real i2 [4:0]);\n  a a_inst(.i1(i2));\nendmodule: b\n",
        "minified_error": null,
        "full_error": "%Error: top.sv:37:58: Input port connection 'ebjo' expected non-complex non-double pin connection in width check\n",
        "full_example": "// Seed: 9244119237703911260,5862439558234323861\n\nmodule lk\n  (output logic mctib [2:0][4:0], output bit uik);\n\n  xor qd(yd, iujusnzwb, yd);\n\nendmodule: lk\n\nmodule lvjlzokfzt\n  ( output integer pvkstguxxi\n  , output bit [1:4] ws [4:1]\n  , input real ebjo [0:4]\n  , input bit [1:0] abx\n  , input logic [0:0] zsdymu\n  , input logic [3:0] a\n  );\n\n  logic eqjy [2:0][4:0];\n  logic aioudsapf [2:0][4:0];\n\n  xor dgwwyi(uqivq, a, gsumffuuo);\n  lk cgje(.mctib(eqjy), .uik(ehqypibnx));\n  lk wjciaknap(.mctib(aioudsapf), .uik(vsulqrbzb));\n\nendmodule: lvjlzokfzt\n\nmodule xmdsw\n  (input real lcypuam [4:0], input real g [3:2], input logic [1:3] hvufqklf [0:2]);\n\n  bit [1:4] fsjanxl [4:1];\n  logic tgpg [2:0][4:0];\n  logic iandbid [2:0][4:0];\n  logic ksufhljtri [2:0][4:0];\n\n  lvjlzokfzt lwysi(.pvkstguxxi(pckjhhwh), .ws(fsjanxl), .ebjo(lcypuam), .abx(wolnh), .zsdymu(gxknhxc), .a(pckjhhwh));\n  lk b(.mctib(tgpg), .uik(qymzy));\n  lk dqtoh(.mctib(iandbid), .uik(es));\n  lk uli(.mctib(ksufhljtri), .uik(ergknrqefw));\n\nendmodule: xmdsw\n\n// Seed after: 846548215004790608,5862439558234323861\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/verilator/verilator/issues/5877"
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "instance_has_the_same_name_as_port",
    "title": "Instance has the same name as port",
    "short_desc": null,
    "examples": [
      {
        "id": "instance_has_the_same_name_as_port_v1",
        "first_found": "2024-12-17T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:1:8: Unsupported in C: Instance has the same name as port: 'p'\n",
        "full_example": "module xkkf\n  (output wire hk, output bit sekew, output bit frqhrnh, output wire pwkkdczkw, input logic p, input wire vfuvoh);\n\n  assign hk = vfuvoh;\n  assign sekew = vfuvoh;\n  assign frqhrnh = p;\n  assign pwkkdczkw = vfuvoh;\nendmodule: xkkf\n\nmodule p\n  (output wire avbsmmkv, output wire uxeit);\n\n  or jlnzrbasnv(uxeit, uxeit, uxeit);\n\n  assign avbsmmkv = uxeit;\nendmodule: p\n\nmodule quxrwlxgk\n  (input logic a, input uwire xhc, input int qtwwqyp, input real qw);\n\n  or mbakoem(bttmnvylhq, a, a);\n  and ptnkgc(ucxkqd, qtwwqyp, bttmnvylhq);\n\nendmodule: quxrwlxgk\n\nmodule tbjwaeog\n  (input bit u, input integer vzhlr, input wire iwgcoh);\n\nendmodule: tbjwaeog\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "non_packed_has_no_width",
    "title": "non-packed has no 'width()'",
    "short_desc": null,
    "examples": [
      {
        "id": "non_packed_has_no_width_v1",
        "first_found": "2025-07-22T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: Internal Error: top.sv:4:29: ../V3Dfg.h:247: non-packed has no 'width()'\n",
        "full_example": "module db\n  ( output tri0 logic [1:2] rb [1:4]\n  , input logic zeik\n  , input wire logic [2:2][2:2][0:4][4:3] wkbjlwoi [3:4][2:0][0:1]\n  , input uwire logic [0:0][4:4] xjtj [3:1][3:0][0:4]\n  , input tri0 logic nwv [0:2][1:1][1:3][0:4]\n  );\n\n\n  and tvh(hjc, lcsl, mgve);\n\n  nand oitzocsxex(sba, hjc, mgve);\n\n  not obb(jryxssc, mgve);\n\n  not ywh(mgve, elwzyup);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign elwzyup = 'b0;\n  assign lcsl = 'bx;\n  assign rb = '{'b0,'bx,'bx,'bx};\n\n  // Multi-driven assigns\n  assign rb = '{'b1,'bx,'b1,'bz};\n  assign mgve = 'bx;\n  assign rb = '{'b0,'b0,'b0,'b1};\nendmodule: db\n\nmodule hrpoidukjo\n  ();\n\n  wire logic [2:2][2:2][0:4][4:3] xpwsuumfno [3:4][2:0][0:1];\n  uwire logic [0:0][4:4] abahwd [3:1][3:0][0:4];\n  tri0 logic wpawoy [0:2][1:1][1:3][0:4];\n  tri0 logic [1:2] sotz [1:4];\n\n  not efnwyenfur(khermwo, khermwo);\n\n  db nnidcapilk(.rb(sotz), .zeik(jiktkfqptj), .wkbjlwoi(xpwsuumfno), .xjtj(abahwd), .nwv(wpawoy));\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign jiktkfqptj = 'bx;\n  assign abahwd = '{'{'{'b0,'bz,'bx,'bx,'bx},'{'b0,'bx,'bz,'b1,'b1},'{'b1,'b0,'b1,'bx,'bz},'{'b0,'b1,'b0,'b0,'b1}},'{'{'b0,'b0,'b0,'bz,'bx},'{'bx,'b1,'bz,'bx,'bz},'{'b1,'bz,'b1,'b0,'b0},'{'b1,'bx,'b1,'bx,'b1}},'{'{'b0,'b0,'b0,'bx,'b0},'{'bz,'b0,'bx,'b0,'b1},'{'b0,'bx,'b1,'bz,'bx},'{'bz,'b0,'bz,'bz,'b0}}};\n  assign wpawoy = '{'{'{'{'b0,'bx,'b1,'b0,'bz},'{'b1,'b0,'bz,'b0,'bx},'{'b0,'bz,'bx,'bx,'b0}}},'{'{'{'b1,'bz,'b0,'bx,'bx},'{'bx,'b0,'bx,'bz,'b0},'{'bz,'b0,'bz,'bz,'bx}}},'{'{'{'b1,'b1,'b0,'b0,'bz},'{'b1,'bz,'b1,'b0,'bz},'{'bx,'b0,'bz,'b0,'bz}}}};\n  assign xpwsuumfno = '{'{'{'b1,'b1},'{'b1,'b0},'{'bx,'bx}},'{'{'b0,'bx},'{'bx,'b0},'{'b0,'b0}}};\n\n  // Multi-driven assigns\n  assign wpawoy = '{'{'{'{'bx,'b1,'b1,'bz,'b1},'{'b1,'bz,'b0,'bz,'b0},'{'b0,'bx,'b1,'bx,'b0}}},'{'{'{'bx,'bx,'b1,'b1,'bz},'{'b1,'bz,'b0,'b0,'b1},'{'bx,'bx,'b0,'b0,'bx}}},'{'{'{'b0,'bx,'b0,'b0,'bz},'{'bx,'bz,'bz,'bx,'bx},'{'b1,'b0,'bz,'b1,'bx}}}};\n  assign wpawoy = '{'{'{'{'bx,'b1,'bx,'b0,'bx},'{'b0,'bz,'bx,'bx,'bx},'{'bx,'bx,'b0,'bz,'b1}}},'{'{'{'bx,'b1,'bz,'bx,'b1},'{'bz,'bx,'bx,'bx,'bx},'{'b1,'b0,'bz,'b0,'bx}}},'{'{'{'b0,'bz,'b0,'bx,'bx},'{'bz,'bx,'bx,'b1,'bz},'{'bz,'b0,'b1,'bz,'b0}}}};\nendmodule: hrpoidukjo\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "not_an_unpacked_array_but_in_unpacked_array_context",
    "title": "Not an unpacked array but in unpacked array context",
    "short_desc": null,
    "examples": [
      {
        "id": "const_not_an_unpacked_array_but_in_unpacked_array_context",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:14:46: CONST '24'h0' is not an unpacked array, but is in an unpacked array context\n14 | (output supply0 logic [4:4][1:4][4:2][1:0] cdsdbfz [0:1], input reg [3:3] ndh, input shortreal enysa);\n\n%Error: top.sv:41:36: CONST '6'h0' is not an unpacked array, but is in an unpacked array context\n41 | (output supply0 logic [0:1][2:4] l [3:3], output logic [3:0] zpabkp, output byte oiu);\n",
        "full_example": "// Seed: 7395972068897804450,5268399088297407135\n\nmodule suyy\n  (input wire logic [1:2][2:4][2:2] efekoqbi [4:3][1:1]);\n\n// Top inputs -> top outputs assigns\n\n// Assigns\n\nendmodule: suyy\n\nmodule szivyu\n  (output supply0 logic [4:4][1:4][4:2][1:0] cdsdbfz [0:1], input reg [3:3] ndh, input shortreal enysa);\n\n  wire logic [1:2][2:4][2:2] idubqtvboq [4:3][1:1];\n\n  and dtu(edovuhv, cvpoim, eeohiucef);\n\n  suyy nzgmo(.efekoqbi(idubqtvboq));\n\n  nand rhqt(br, edovuhv, br);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: szivyu\n\n\nmodule youiuikhn\n  (output logic [3:4][4:2] ez [2:3], output wand logic [4:2][1:0] cu [1:4], output triand logic [4:2][4:2] vx);\n\n// Top inputs -> top outputs assigns\n\n// Assigns\n\nendmodule: youiuikhn\n\n\nmodule x\n  (output supply0 logic [0:1][2:4] l [3:3], output logic [3:0] zpabkp, output byte oiu);\n\n  wire logic [1:2][2:4][2:2] ugiu [4:3][1:1];\n\n  xor b(gkzgvix, yydhoqxj, tm);\n\n  suyy j(.efekoqbi(ugiu));\n  // warning: implicit conversion of port connection expands from 1 to 6 bits\n  // wire logic ugiu -> wire logic [1:2][2:4][2:2] efekoqbi [4:3][1:1]\n\n  xor yvya(zpabkp, epybp, ewghtvjxu);\n  // warning: implicit conversion of port connection truncates from 6 to 1 bits\n  // wire logic [1:2][2:4][2:2] epybp [4:3][1:1] -> logic epybp\n\n  not epa(oiu, weatygjijf);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: x\n\n// Seed after: 6076561090930407099,5268399088297407135\n"
      },
      {
        "id": "varref_not_an_unpacked_array_but_in_unpacked_array_context",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:41:38: VARREF 'wup__en2' is not an unpacked array, but is in an unpacked array context\n  41 | , input tri1 logic [0:3][2:0][2:3] wup [0:2][3:3][1:4]\n",
        "full_example": "module gsha\n  (input logic [0:3][4:4] cqfmkxy, input reg [2:2][3:0][4:1][2:0] tuandlau);\n\n  or nxoixb(fedewp, fedewp, tuandlau);\n  // warning: implicit conversion of port connection truncates from 48 to 1 bits\n  // reg [2:2][3:0][4:1][2:0] fedewp -> logic fedewp\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: gsha\n\nmodule drzpuza\n  ( output logic [2:4][1:4][1:4][1:1] i\n  , output uwire logic [1:2][0:3] gpskj\n  , output uwire logic [1:2][1:1][0:4][2:1] lokzl [0:0]\n  , input time imijbzrb [2:2]\n  , input real emtzmqiiq\n  , input logic [0:0][0:2] uzxwa\n  , input logic [1:0][0:0][1:4] yepbbdeuls\n  );\n\n  or jfnbnuewmr(vjcpmamhq, uzxwa, mwxbotd);\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // logic [0:0][0:2] mwxbotd -> logic mwxbotd\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: drzpuza\n\nmodule tovn\n  ( output tri0 logic [0:4] hsxniwmvoq [1:2][4:1]\n  , output tri0 logic ujyq [3:2][3:0][3:2][3:3]\n  , input tri1 logic [0:3][2:0][2:3] wup [0:2][3:3][1:4]\n  , input wand logic [2:4][2:3][2:2][1:4] dbbalmko [2:3][1:0][2:1][0:2]\n  );\n\n  not darbmui(ncjazspd, ncjazspd);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: tovn\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "operator_assignw_expected_non_double",
    "title": "Operator ASSIGNW expected non-complex non-double",
    "short_desc": null,
    "examples": [
      {
        "id": "operator_assignw_expected_non_double_v1",
        "first_found": "2025-02-03T00:00:00.000Z",
        "minified_example": "module a(output real o1 [3:0], input real i1 [3:0]);\n  assign o1 = i1;\nendmodule\n",
        "minified_error": null,
        "full_error": "Error: top.sv:30:13: Operator ASSIGNW expected non-complex non-double Assign RHS in width check\n",
        "full_example": "module qha\n  (output real evqvvq [2:4], input wire jnrihwxdls [4:2], input logic [2:2] aanpt, input integer utf [3:2]);\n\nendmodule: qha\n\nmodule wifydq\n  (output bit sbiajs [1:3], output logic [2:2] jwzrezf, output int tlhxiuang [2:3], input integer qky, input bit [0:1] t);\n\nendmodule: wifydq\n\nmodule zam\n  (output logic qkdqpmd [2:0], output real qidcicusw, input real y);\n\n\n  or xtfwrlwqi(vhrlq, vhrlq, kinpjls);\n\nendmodule: zam\n\nmodule xlvqeibu\n  (output wire zsymsud [4:2], output real dl [3:0], output real txzrzek, input real ydp [4:1]);\n\n  logic bepuq [2:0];\n\n  zam b(.qkdqpmd(bepuq), .qidcicusw(gf), .y(gf));\n\n  assign dl = ydp;\nendmodule: xlvqeibu\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "output_port_connection_connects_real_to_non_real",
    "title": "Output port connection connects real to non-real",
    "short_desc": null,
    "examples": [
      {
        "id": "output_port_connection_connects_real_to_non_real_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:23:35: Unsupported: Output port connection 'gsannnig' connects real to non-real\n",
        "full_example": "module fojwmn\n  (output bit [3:2] mixclycjhf, output int qxzaoklel, input int xkyya, input logic [3:4] ykfrocmze, input bit [3:3][1:2][4:1] grhl);\n\n  xor i(re, grhl, ykfrocmze);\n\nendmodule: fojwmn\n\nmodule vtykdzw\n  (output logic ilwebga, output real gsannnig, input bit [2:2] fwiwccuwf, input wire ulgiuqez);\n\n  nand hq(yso, bm, ulgiuqez);\n\nendmodule: vtykdzw\n\nmodule hjivk\n  ();\n\n  vtykdzw haczawgmd(.ilwebga(y), .gsannnig(yrmdv), .fwiwccuwf(snhm), .ulgiuqez(twvoqkqrl));\n\nendmodule: hjivk\n\nmodule k\n  (output logic [1:1] f, output integer p [4:4][3:4], output logic [0:4][3:1] id, output wire zckbjl, input integer brutctvlvj [0:4][3:3]);\n\n\n  hjivk xyh();\n  hjivk zxroj();\n  hjivk fbwh();\n\nendmodule: k\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "port_connection_to_inout_signal_requires_bits",
    "title": "Port connection to inout signal requires X bits, but ... generates Y bits.",
    "short_desc": null,
    "examples": [
      {
        "id": "input_port_connection_to_inout_signal_requires_bits",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:76:72: Unsupported: Input port connection 't' to inout signal requires 20 bits, but connection's VARREF 'lkq' generates 1 bits.\n",
        "full_example": "module cnsmz\n  (output reg [0:4][0:4] icnr, output triand logic [3:0][3:1] sd [4:3][2:4][0:4], output uwire logic ikjmuj [3:4][2:2][0:0][2:1]);\n\n  and jy(cyunihcw, cyunihcw, icnr);\n\n  and ywumrkwke(ygqfxwwwq, icnr, wyoi);\n\n  and jewcl(icnr, ygqfxwwwq, gamlrnko);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: cnsmz\n\nmodule oakudnwy\n  ( output integer kycyza\n  , output bit [2:0] iixzf [1:0]\n  , output reg [1:3][2:2] ypkx [2:1]\n  , input tri0 logic [0:4][1:0][2:2][2:1] t\n  , input logic [4:4] mjvnizix [0:0][4:4]\n  , input time nywj\n  , input tri1 logic [4:4][0:0][1:4] y [3:2][2:4][1:2]\n  );\n\n  triand logic [3:0][3:1] bzwouxgn [4:3][2:4][0:4];\n\n  uwire logic oirbmb [3:4][2:2][0:0][2:1];\n\n  cnsmz sep(.icnr(kycyza), .sd(bzwouxgn), .ikjmuj(oirbmb));\n  // warning: implicit conversion of port connection truncates from 25 to 1 bits\n  // reg [0:4][0:4] icnr -> uwire logic kycyza [3:4][2:2][0:0][2:1]\n  //\n  // warning: implicit conversion of port connection expands from 1 to 25 bits\n  // uwire logic ikjmuj [3:4][2:2][0:0][2:1] -> reg [0:4][0:4] oirbmb\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\n  endmodule: oakudnwy\n\n  module injit\n  ( output tri1 logic [4:2] bsuxdxuphq\n  , output time yoephran\n  , input shortint tzcmxtmzk\n  , input trior logic [0:4][3:1][3:0][0:3] hntzz [0:2][0:1][2:1][3:3]\n  , input logic [1:1][2:1][4:2] o [3:0]\n  );\n\n  // Top inputs -> top outputs assigns\n  assign yoephran = tzcmxtmzk;\n\n  // Assigns\n\nendmodule: injit\n\nmodule ov\n  ( output supply1 logic [2:1][3:4] fo [2:1][3:2][2:3][4:0]\n  , output wand logic [4:3][2:4][2:2][4:3] d [3:4]\n  , output uwire logic [1:0][2:0][0:2][3:2] pmyfk [3:0][4:3][4:3][2:4]\n  , output wire logic lkq\n  , input trior logic [3:1][2:2][4:1] vlj [4:0][0:2]\n  , input logic [4:1] ir [0:0]\n  , input wand logic dllhevhie\n  );\n\n  logic [4:4] oacfbd [0:0][4:4];\n\n  tri1 logic [4:4][0:0][1:4] asmwhvakpb [3:2][2:4][1:2];\n\n  bit [2:0] dhoxwthfxh [1:0];\n\n  reg [1:3][2:2] nrkztu [2:1];\n\n  oakudnwy rb(.kycyza(jbgoxwjdyu), .iixzf(dhoxwthfxh), .ypkx(nrkztu), .t(lkq), .mjvnizix(oacfbd), .nywj(rpdnwthsos), .y(asmwhvakpb));\n  // warning: implicit conversion of port connection truncates from 32 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // integer kycyza -> logic jbgoxwjdyu\n  //\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  // bit [2:0] iixzf [1:0] -> reg [1:3][2:2] dhoxwthfxh [2:1]\n  //\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  // reg [1:3][2:2] ypkx [2:1] -> bit [2:0] nrkztu [1:0]\n  //\n  // warning: implicit conversion of port connection expands from 1 to 20 bits\n  // wire logic lkq -> tri0 logic [0:4][1:0][2:2][2:1] t\n  //\n  // warning: implicit conversion of port connection truncates from 4 to 1 bits\n  // tri1 logic [4:4][0:0][1:4] oacfbd [3:2][2:4][1:2] -> logic [4:4] mjvnizix [0:0][4:4]\n  //\n  // warning: implicit conversion of port connection expands from 1 to 64 bits\n  // wire logic rpdnwthsos -> time nywj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 4 bits\n  // logic [4:4] asmwhvakpb [0:0][4:4] -> tri1 logic [4:4][0:0][1:4] y [3:2][2:4][1:2]\n\n  not at(lkq, argpbq);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: ov\n"
      },
      {
        "id": "output_port_connection_to_inout_signal_requires_bits",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:52:25: Unsupported: Output port connection 'mdhusbbwa' to inout signal requires 3 bits, but connection's VARREF 'j' generates 1 bits.\n  : ... note: In instance 'd'\n  52 | ukkjwlngu axobjyezk( .mdhusbbwa(j)\n",
        "full_example": "module ukkjwlngu\n  ( output tri0 logic [2:4] mdhusbbwa\n  , output reg [4:0] vymhoh [0:2]\n  , output shortint pcviuvwep\n  , input wor logic eshxdtw [4:2]\n  , input realtime nbg [0:2]\n  , input real mnvvwuty [2:4]\n  , input wire logic [2:3][3:4][1:3][1:2] fplkvczkdt [1:2]\n  );\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: ukkjwlngu\n\nmodule ladazmrs\n  ( output wand logic [1:0][3:2][2:1] sajicoa\n  , input logic [1:0] tru [1:2]\n  , input reg dtyvyivtr\n  , input reg [4:3][3:2] eoxrfnlwvd\n  , input int cnns [4:4][3:3]\n  );\n\n  not fk(hjonzx, hsk);\n  // warning: implicit conversion of port connection truncates from 4 to 1 bits\n  // reg [4:3][3:2] hsk -> logic hsk\n\n  not ta(dozzv, eoxrfnlwvd);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: ladazmrs\n\nmodule d\n  ();\n\n  wor logic phh [4:2];\n\n  realtime beqrg [0:2];\n\n  real dlsp [2:4];\n\n  wire logic [2:3][3:4][1:3][1:2] udfqrrufj [1:2];\n\n  reg [4:0] dzfz [0:2];\n\n  not qv(xvpnoloome, zjsqljmyd);\n\n  ukkjwlngu axobjyezk( .mdhusbbwa(j)\n  , .vymhoh(dzfz)\n  , .pcviuvwep(zwqdcyh)\n  , .eshxdtw(phh)\n  , .nbg(beqrg)\n  , .mnvvwuty(dlsp)\n  , .fplkvczkdt(udfqrrufj)\n  );\n\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // tri0 logic [2:4] mdhusbbwa -> wire logic j\n  //\n  // warning: implicit conversion of port connection truncates from 16 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  // shortint pcviuvwep -> wire logic zwqdcyh\n  //\n  // warning: implicit conversion of port connection truncates from 24 to 1 bits\n  // wire logic [2:3][3:4][1:3][1:2] phh [1:2] -> wor logic eshxdtw [4:2]\n  //\n  // warning: implicit conversion of port connection expands from 1 to 24 bits\n  // wor logic udfqrrufj [4:2] -> wire logic [2:3][3:4][1:3][1:2] fplkvczkdt [1:2]\n\n  not h(lirxsdrmky, ztuvu);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: d\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "simulation",
    "tool": "verilator",
    "id": "settle_region_did_not_converge",
    "title": "Settle region did not converge",
    "short_desc": null,
    "examples": [
      {
        "id": "settle_region_did_not_converge_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": "module a(output int o1);\n  nand g1(o1, o1, o1);\nendmodule: a\n",
        "minified_error": null,
        "full_error": "%Error: top.sv:3: Settle region did not converge.\n",
        "full_example": "module k\n  (output bit [3:0] w, output integer mqutvy [1:3][2:3], input bit [1:0] ngudydmn [3:3], input logic [0:2] fcdsbpubz);\n\n  xor puymgiy(brw, fcdsbpubz, jq);\n\nendmodule: k\n\nmodule cbez\n  (output int zqgmgv, input integer cu [0:1]);\n\n  nand lx(zqgmgv, zqgmgv, zqgmgv);\n\nendmodule: cbez\n\nmodule mpluunotd\n  (output bit [1:3] joujyru, output int tkxui, output logic vzm [3:3][0:1], output logic [0:2][2:3] eidpbxyp);\n\nendmodule: mpluunotd\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "slices_of_arrays_in_assignments_have_different_unpacked_dimensions",
    "title": "Slices of arrays in assignments have different unpacked dimensions",
    "short_desc": null,
    "examples": [
      {
        "id": "slices_of_arrays_in_assignments_have_different_unpacked_dimensions_v1",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:39:29: Slices of arrays in assignments have different unpacked dimensions, 4 versus 2\n  39 | ( output tri0 logic [0:4] hsxniwmvoq [1:2][4:1]\n",
        "full_example": "module gsha\n  (input logic [0:3][4:4] cqfmkxy, input reg [2:2][3:0][4:1][2:0] tuandlau);\n\n  or nxoixb(fedewp, fedewp, tuandlau);\n  // warning: implicit conversion of port connection truncates from 48 to 1 bits\n  // reg [2:2][3:0][4:1][2:0] fedewp -> logic fedewp\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: gsha\n\nmodule drzpuza\n  ( output logic [2:4][1:4][1:4][1:1] i\n  , output uwire logic [1:2][0:3] gpskj\n  , output uwire logic [1:2][1:1][0:4][2:1] lokzl [0:0]\n  , input time imijbzrb [2:2]\n  , input real emtzmqiiq\n  , input logic [0:0][0:2] uzxwa\n  , input logic [1:0][0:0][1:4] yepbbdeuls\n  );\n\n  or jfnbnuewmr(vjcpmamhq, uzxwa, mwxbotd);\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  // logic [0:0][0:2] mwxbotd -> logic mwxbotd\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: drzpuza\n\nmodule tovn\n  ( output tri0 logic [0:4] hsxniwmvoq [1:2][4:1]\n  , output tri0 logic ujyq [3:2][3:0][3:2][3:3]\n  , input tri1 logic [0:3][2:0][2:3] wup [0:2][3:3][1:4]\n  , input wand logic [2:4][2:3][2:2][1:4] dbbalmko [2:3][1:0][2:1][0:2]\n  );\n\n  not darbmui(ncjazspd, ncjazspd);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: tovn\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "unsupported_trireg",
    "title": "Unsupported trireg",
    "short_desc": null,
    "examples": [
      {
        "id": "unsupported_trireg_v1",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:41:11: Unsupported: trireg\n  41 | , input trireg logic lzwyxd\n",
        "full_example": "module xdg\n  ( output logic [2:3][0:4][4:4] latxfuads\n  , input reg [0:4][0:0][0:1] ige\n  , input logic bgmgf\n  , input reg [1:2][0:4][1:1] nhrwo [3:0]\n  , input tri1 logic [2:4][4:1][0:0] pbvdoh [0:4][2:3][2:4][1:1]\n  );\n\n  not nzl(xyy, twgqbua);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: xdg\n\nmodule kz\n  ( input logic [1:1] catrzhm [1:1]\n  , input bit [2:0] epcmnctgt\n  , input bit [2:1][0:0] miqa\n  , input supply0 logic [2:1][2:2] uuwhxzje [3:4][4:2]\n  );\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: kz\n\nmodule w\n  ( output trior logic [3:0] hbgzph\n  , output logic [4:3][4:3] ycf [4:4][1:2]\n  , output logic [1:3][1:2][0:1] vnpq\n  , output reg [3:1][2:4][1:2] wo\n  , input realtime ypbup\n  , input real sdtgcjne [4:2]\n  , input trireg logic lzwyxd\n  , input supply0 logic [1:0][4:1][3:2] zsiqmdee [2:1][4:4][0:0][0:1]\n  );\n\n  not yxsqtdq(tpypxvhr, zxyosgsb);\n\n  xor atjgvxkqpa(lvmywhvdyj, jmgpowigt, lzwyxd);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n\nendmodule: w\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "unsupported_tristate_construct_inititem",
    "title": "Unsupported tristate construct INITITEM",
    "short_desc": null,
    "examples": [
      {
        "id": "unsupported_tristate_construct_inititem_v1",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:13:18: Unsupported tristate construct: INITITEM\n: ... note: In instance 'bnwdulpdjo'\n13 | assign ifdnp = '{'b0, 'bz};\n",
        "full_example": "module bnwdulpdjo\n  (output int uasic, output wire pd, output int ifdnp [3:2], input wire qvqo [2:3]);\n\n  not nyz(uasic, uasic);\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\n  assign pd = 'b0;\n  assign ifdnp = '{'b0, 'bz};\nendmodule: bnwdulpdjo\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "unsupported_tristate_construct_triand_graph",
    "title": "Unsupported tristate construct (in graph; not converted)",
    "short_desc": null,
    "examples": [
      {
        "id": "unsupported_tristate_construct_triand_graph_const",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "Unsupported tristate construct (in graph; not converted): CONST '1'bz'\n",
        "full_example": "module xbzdahabhw\n  (output logic [0:1] fziqpeo [0:3], output triand logic [1:2][4:1] om [2:1][2:1][2:0]);\n\n  xor bv(xty, sapauggg, q);\n\n  nand l(njghqv, c, q);\n\n  not xqydflsxp(cqucbfif, q);\n\n  or r(q, gcmbjlhaeh, pjtwdndp);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign c = 'b1;\n  assign sapauggg = 'bz;\n\n  // Multi-driven assigns\n  assign om = '{'{'{'b1,'b0,'bx},'{'b1,'b0,'b0}},'{'{'bx,'bz,'bx},'{'b0,'b1,'b0}}};\n  assign xty = 'b1;\n  assign om = '{'{'{'bz,'bz,'b1},'{'b1,'bx,'b1}},'{'{'bx,'bz,'b0},'{'bz,'bx,'b0}}};\nendmodule: xbzdahabhw\n\nmodule opqzzgtarh\n  (output reg g, output real qtwnqz [3:0], output longint bgrpm);\n\n  logic [0:1] y [0:3];\n  triand logic [1:2][4:1] jt [2:1][2:1][2:0];\n\n  xor pcgzlh(swsu, rpt, aj);\n\n  xbzdahabhw xi(.fziqpeo(y), .om(jt));\n\n  not ovvl(bgrpm, bgrpm);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign qtwnqz = '{'b0,'bz,'b1,'b1};\n\n  // Multi-driven assigns\n  assign jt = '{'{'{'b1,'b1,'b1},'{'bz,'bz,'b1}},'{'{'b0,'b0,'b0},'{'bx,'bz,'b0}}};\n  assign jt = '{'{'{'b0,'b0,'bx},'{'b0,'bz,'bz}},'{'{'b0,'bx,'b0},'{'bx,'b0,'bx}}};\nendmodule: opqzzgtarh\n\nmodule pgm\n  (output tri logic xfug [3:2][2:2][4:0]);\n\n  nand ojgfewpcl(ap, ap, myuixvw);\n\n  not adkuue(myuixvw, lqlpsidn);\n\n  xor cefy(lqlpsidn, lqlpsidn, jkyjxwal);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign xfug = '{'{'{'b0,'bx,'bx,'bz,'bz}},'{'{'b1,'bx,'bx,'b0,'b1}}};\n  assign jkyjxwal = 'bx;\n\n  // Multi-driven assigns\n  assign lqlpsidn = 'bz;\n  assign xfug = '{'{'{'b0,'b0,'b0,'b1,'b0}},'{'{'b1,'b0,'bz,'bx,'bx}}};\n  assign xfug = '{'{'{'b1,'b0,'b0,'b1,'bz}},'{'{'bz,'bz,'b1,'b0,'b1}}};\n  assign xfug = '{'{'{'b0,'b0,'b1,'bz,'bx}},'{'{'bz,'bx,'b1,'bz,'b0}}};\nendmodule: pgm\n"
      },
      {
        "id": "unsupported_tristate_construct_triand_graph_varref",
        "first_found": "2025-07-07T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:58:10: Unsupported tristate construct (in graph; not converted): VARREF 'fyruvy'\n",
        "full_example": "module bds\n  ( output wand logic [0:0][3:3][0:3][1:2] gkwggxbkpt [3:0][0:3][0:2][2:4]\n  , output tri1 logic [2:3][4:0][0:2][3:4] zgjwvrbva [0:4]\n  , output tri logic eu [3:2]\n  , output realtime pmake\n  , input time royrmsw\n  , input bit [4:3][4:4][0:1] ltsbgechj\n  );\n\n\n  xor fzgfje(ofwq, royrmsw, mbpuk);\n  // warning: implicit conversion of port connection truncates from 64 to 1 bits\n  //   time royrmsw -> logic royrmsw\n\n  not pmqxbxvkb(blyyln, jrynh);\n\n  not vrr(jrynh, ozjl);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign zgjwvrbva = '{'bz,'bx,'bx,'b0,'bz};\n  assign eu = '{'bz,'bz};\n  assign mbpuk = 'b1;\n\n  // Multi-driven assigns\nendmodule: bds\n\nmodule gkokmqe\n  ( output shortint t\n  , output triand logic [0:0][3:3] fyruvy\n  , output shortreal pbj [0:3][2:4]\n  , input wor logic [3:4][1:2][2:1] rter [0:0][0:0][0:0][2:4]\n  , input wire logic [3:3][1:3][1:0][4:1] gcdb [0:3][3:2][1:1]\n  , input bit [3:3][4:0][4:2][0:0] zuqrabpmi\n  , input triand logic [3:0][0:1][2:4][0:1] maggdh [1:0][1:3][1:4][2:2]\n  );\n\n\n  xor hiu(nqpbvsucu, jhap, eikwcpsn);\n\n  nand xvn(jvdhk, bmmcnxvke, b);\n\n  not giny(vwrbiev, qozv);\n\n  or yea(t, t, cro);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign pbj = '{'{'b0,'bx,'b0},'{'bz,'bx,'bz},'{'b0,'b1,'b0},'{'bz,'bx,'bx}};\n  assign cro = 'b1;\n  assign qozv = 'bx;\n  assign fyruvy = 'bz;\n  assign b = 'bx;\n\n  // Multi-driven assigns\n  assign fyruvy = 'b0;\n  assign fyruvy = 'bx;\n  assign jvdhk = 'b0;\n  assign fyruvy = 'bx;\nendmodule: gkokmqe\n"
      },
      {
        "id": "unsupported_tristate_construct_triand_graph_assignw",
        "first_found": "2025-07-21T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:4:46: Unsupported tristate construct (in graph; not converted): ASSIGNW\n",
        "full_example": "module fzdvm\n  ( output triand logic [1:0][3:0][4:1][4:4] tkbyhwql\n  , output realtime dh [2:4][3:3]\n  , input integer spcavyg\n  , input wand logic [3:4] zwn [3:3][2:4][3:2][0:4]\n  );\n\n  nand fxffiyqx(rteypawfw, tkbyhwql, tkbyhwql);\n\n  not eyhdqcmpiy(tkbyhwql, tkbyhwql);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign dh = '{'{'bx},'{'bx},'{'bx}};\n\n  // Multi-driven assigns\n  assign tkbyhwql = 'bz;\nendmodule: fzdvm\n\nmodule rnbqswtn\n  ( output real lj\n  , output uwire logic [4:0][4:3][2:3][2:1] mioscshqu\n  , output supply1 logic ofipox\n  , input logic sl\n  , input tri logic [0:0][2:2][1:1] ldlyo [1:0][2:0][2:1][4:0]\n  , input reg [0:3][4:3][0:3] qfeaazkksm\n  );\n\n  or cppeuksodh(ofipox, rq, rimieshrxj);\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign mioscshqu = 'b0;\n  assign rq = 'b1;\n  assign rimieshrxj = 'b0;\n  assign lj = 'bx;\n\n  // Multi-driven assigns\nendmodule: rnbqswtn\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "unsupported_tristate_construct_triand_not_graph",
    "title": "Unsupported tristate construct (not in propagation graph)",
    "short_desc": null,
    "examples": [
      {
        "id": "unsupported_tristate_construct_triand_not_graph_or",
        "first_found": "2025-07-05T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "Unsupported tristate construct (not in propagation graph): OR\n",
        "full_example": "module xyyrehs\n  (output bit [4:1][4:1][4:3][4:4] drgieooos, input tri0 logic [2:1] cjfrkm [3:4][0:4][4:1][3:2], input wire logic vckuladkdj [3:0]);\n\n  not grbvrmows(gxcftgch, yv);\n\n  or czzgdozg(yv, gxcftgch, yv);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign drgieooos = 'b0;\n\n  // Multi-driven assigns\nendmodule: xyyrehs\n\nmodule uxkiqmhwo\n  ( output uwire logic [0:2][3:4] xjd [1:3][1:1]\n  , output realtime ytidpi\n  , output reg rmlocox\n  , input wor logic rny\n  , input trior logic yspcpklr [2:3]\n  , input wand logic [4:1][1:0][0:3][1:0] gommacm [2:3]\n  );\n\n  tri0 logic [2:1] fqm [3:4][0:4][4:1][3:2];\n  wire logic myvg [3:0];\n\n  not ixk(zcxrbyfgq, zcxrbyfgq);\n\n  xyyrehs dddod(.drgieooos(rmlocox), .cjfrkm(fqm), .vckuladkdj(myvg));\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign xjd = '{'{'b0},'{'b0},'{'bx}};\n  assign fqm = '{'{'{'{'bx,'b1},'{'b1,'bx},'{'b0,'b1},'{'b1,'b1}},'{'{'bz,'bx},'{'bz,'b0},'{'bx,'bx},'{'bx,'bx}},'{'{'bx,'b0},'{'b1,'b1},'{'b1,'b1},'{'bx,'b0}},'{'{'b0,'b1},'{'bx,'b0},'{'b0,'b1},'{'b0,'bx}},'{'{'bz,'bx},'{'b1,'b1},'{'b0,'b0},'{'b0,'b0}}},'{'{'{'bx,'bx},'{'bz,'bx},'{'b0,'b1},'{'b0,'bx}},'{'{'bx,'bz},'{'bz,'b1},'{'bz,'b1},'{'bz,'b1}},'{'{'bz,'bx},'{'b1,'bx},'{'b1,'bx},'{'bx,'bz}},'{'{'bx,'bz},'{'bx,'b0},'{'bz,'bx},'{'b0,'b1}},'{'{'bz,'b1},'{'b0,'bx},'{'b0,'bx},'{'b1,'b1}}}};\n  assign myvg = '{'bz,'b0,'b0,'bx};\n  assign ytidpi = 'bz;\n\n  // Multi-driven assigns\n  assign zcxrbyfgq = 'bx;\n  assign zcxrbyfgq = 'bx;\nendmodule: uxkiqmhwo\n\nmodule kfbe\n  (output wor logic [4:0][1:1] aeganepcu);\n\n\n  xor iluttm(pfax, i, h);\n\n  and kym(aeganepcu, pfax, zcfczutnyx);\n\n  and py(ngul, ngul, ngul);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign ngul = 'bz;\n  assign aeganepcu = 'bz;\nendmodule: kfbe\n"
      },
      {
        "id": "unsupported_tristate_construct_triand_not_graph_assignw",
        "first_found": "2025-07-05T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "Unsupported tristate construct (not in propagation graph): ASSIGNW\n",
        "full_example": "module cxaaajtuph\n  (output reg vgjelmbv [0:0], output integer nfi [3:3]);\n\n\n  xor i(lsk, ql, wnazcmrr);\n\n  or dllxuzp(lyocnv, lsk, ddovvd);\n\n  and yyfvxhcqwm(ddovvd, ddovvd, kcycjt);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign ql = 'b1;\n  assign vgjelmbv = '{'b1};\n  assign nfi = '{'b1};\n  assign wnazcmrr = 'bz;\n\n  // Multi-driven assigns\n  assign ddovvd = 'b0;\n  assign ddovvd = 'bz;\n  assign ddovvd = 'bz;\n  assign ddovvd = 'b0;\nendmodule: cxaaajtuph\n\nmodule xo\n  ( output trior logic [0:1][3:0][1:4][3:1] dlslixtblw [0:4][3:4]\n  , output supply0 logic [4:1] whquhcfl [3:2][1:0][3:3]\n  , output tri0 logic [3:1][3:4][1:0][2:3] wjhjukcpy [0:3]\n  , output byte dnpdicppfi\n  , input wand logic vydsdssuky [0:4]\n  , input logic [4:4][0:4][3:1] bkaupqd [3:3]\n  );\n\n  reg bpqfnxvay [0:0];\n  integer rptmimoo [3:3];\n\n  and l(zmiqtpphx, dnpdicppfi, rjusu);\n\n  nand gkcgmpolyi(jkcqj, rycdy, mbg);\n\n  cxaaajtuph wnj(.vgjelmbv(bpqfnxvay), .nfi(rptmimoo));\n\n  nand ivqohb(dnpdicppfi, dnpdicppfi, zdsfvitfoq);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign rycdy = 'bx;\n\n  // Multi-driven assigns\n  assign wjhjukcpy = '{'bz,'bz,'b0,'bz};\nendmodule: xo\n\nmodule cnvrczgr\n  (output wor logic [4:1][3:1][0:1][0:4] koguqup);\n\n\n  or pmcryd(ohuniwt, uaeulwr, nwqc);\n\n  not iejp(koguqup, nrgji);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign nrgji = 'bz;\n  assign nwqc = 'b0;\n  assign uaeulwr = 'b0;\n\n  // Multi-driven assigns\n  assign koguqup = 'bz;\n  assign koguqup = 'b0;\nendmodule: cnvrczgr\n"
      },
      {
        "id": "unsupported_tristate_construct_triand_not_graph_varref",
        "first_found": "2025-07-07T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:15:7: Unsupported tristate construct (not in propagation graph): VARREF 'irkwykwiq'\n",
        "full_example": "module gzeen\n  ( output integer leffd\n  , output int wkjleryuzh\n  , output wand logic [2:4] irkwykwiq\n  , input tri0 logic [3:3][2:1][0:4][3:1] det [1:4][1:4][4:1][1:0]\n  );\n\n\n  not gcfsjvd(cr, vwx);\n\n  and mkdrghwmal(q, vvtmzluk, qie);\n\n  and miyib(irkwykwiq, wkjleryuzh, wkjleryuzh);\n\n  or kxmsr(wkjleryuzh, irkwykwiq, ywzvdnuu);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign leffd = 'b1;\n\n  // Multi-driven assigns\n  assign cr = 'bz;\n  assign irkwykwiq = 'b1;\n  assign irkwykwiq = 'bz;\nendmodule: gzeen\n\nmodule jdlhjok\n  ( output logic ntvtq\n  , output tri1 logic drsov [2:4][2:2][3:2]\n  , output bit [4:0][1:3] w [3:3]\n  , input longint tztrsmjoxk [4:3][2:4]\n  , input logic mtbdfyept\n  );\n\n\n  and frikvgzum(luym, njznakqr, war);\n\n  not dotkxvps(rpmmp, nieosltuw);\n\n  xor zooipt(idwd, nieosltuw, x);\n\n  xor iwogpyd(nieosltuw, luym, nieosltuw);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign w = '{'b1};\n  assign x = 'bz;\n\n  // Multi-driven assigns\n  assign drsov = '{'{'{'bz,'b1}},'{'{'b1,'bx}},'{'{'bz,'b0}}};\n  assign nieosltuw = 'bz;\n  assign idwd = 'bz;\n  assign luym = 'b0;\nendmodule: jdlhjok\n"
      },
      {
        "id": "unsupported_tristate_construct_triand_not_graph_and",
        "first_found": "2025-07-07T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:53:15: Unsupported tristate construct (not in propagation graph): AND\n",
        "full_example": "module hd\n  ( output tri1 logic [4:2][1:4][3:1][4:4] vcywaeuib\n  , output tri0 logic [4:3] hye [0:4][1:1]\n  , output shortreal iofkeszq [0:3]\n  , input shortint dnv\n  );\n\n  not hcdkwoyvyx(qrvop, oio);\n\n  or qxorikis(tdnzpr, dnv, tdnzpr);\n  // warning: implicit conversion of port connection truncates from 16 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   shortint dnv -> logic dnv\n\n  // Top inputs -> top outputs assigns\n  assign vcywaeuib = dnv;\n\n  // Single-driven assigns\n  assign oio = 'b0;\n\n  // Multi-driven assigns\n  assign hye = '{'{'bx},'{'bz},'{'bz},'{'b1},'{'bz}};\n  assign hye = '{'{'bz},'{'bz},'{'b0},'{'b1},'{'bz}};\n  assign hye = '{'{'bz},'{'bx},'{'bz},'{'b1},'{'b0}};\nendmodule: hd\n\nmodule zmevhqq\n  (output triand logic [4:0][3:4] jbpy, output bit [2:3][3:1][2:4][0:4] ekj);\n\n\n  or ztb(qw, qw, nypxc);\n\n  not qe(dzhx, zjxb);\n\n  not vt(jzad, dzhx);\n\n  and tbfuq(ekj, qw, kkvgt);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign jbpy = 'b1;\n  assign nypxc = 'b0;\n  assign kkvgt = 'b1;\n\n  // Multi-driven assigns\n  assign jbpy = 'bz;\n  assign jbpy = 'bz;\nendmodule: zmevhqq\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "unsupported_tristate_port_expression_varref",
    "title": "Unsupported tristate port expression VARREF",
    "short_desc": null,
    "examples": [
      {
        "id": "unsupported_tristate_port_expression_varref_v1",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error-UNSUPPORTED: top.sv:21:69: Unsupported tristate port expression: VARREF '__Vcellinpt__udraazisl__uyocdlqy'\n  : ... note: In instance 'nkuz'\n  21 | phgqb udraazisl(.jsl(pclmizjztv), .lzbajzqmr(w), .epd(jmdosgxs), .uyocdlqy(y));\n",
        "full_example": "module phgqb\n  (output bit [2:0] jsl, output real lzbajzqmr [1:0][0:0], output bit [1:3] epd [1:1], output logic [2:0] uyocdlqy);\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\n  assign uyocdlqy = 'bxxz;\nendmodule: phgqb\n\nmodule nkuz\n  (output uwire winadayzaf [2:4][2:3]);\n\n  real w [1:0][0:0];\n  bit [1:3] jmdosgxs [1:1];\n\n  and dqhopqrikt(oou, vnho, trpqu);\n  phgqb udraazisl(.jsl(pclmizjztv), .lzbajzqmr(w), .epd(jmdosgxs), .uyocdlqy(y));\n\n  // Top inputs -> top outputs assigs\n\n  // Assigns\n  assign trpqu = 'bz;\nendmodule: nkuz\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "variable_has_same_name_as",
    "title": "Variable has same name as ...",
    "short_desc": null,
    "examples": [
      {
        "id": "variable_has_same_name_as_celline",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "%Error: top.sv:23:23: Unsupported in C: Variable has same name as instance: 'ef'\n",
        "full_example": "// Seed: 5349598728013900351,8152328585638401619\n\nmodule ohtszg\n  ( output bit [0:1] kaq [1:3]\n  , output bit [2:2][0:4] cmg\n  , output logic [4:4][4:3] rwa\n  , output logic [1:4] epj\n  , input uwire mtkfp [2:0][3:3]\n  , input logic [0:1][2:1] tq\n  , input integer tqqnq\n  );\n\nendmodule: ohtszg\n\nmodule ef\n  ( output logic [4:0] xwoqmtv [3:0]\n  , output logic [1:3] phhrmshprm [4:2]\n  , output logic [4:3][3:3] ldpqipdf\n  , input logic [1:2] cwb\n  , input bit [0:3] llwc\n  , input logic [0:2] ef\n  );\n\nendmodule: ef\n"
      },
      {
        "id": "variable_has_same_name_as_instance",
        "first_found": "2025-03-04T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": null
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "syntesis",
    "tool": "verilator",
    "id": "wire_inputs_its_own_output",
    "title": "Wire inputs its own output, creating circular logic",
    "short_desc": null,
    "examples": [
      {
        "id": "wire_inputs_its_own_output_v1",
        "first_found": "2024-12-10T00:00:00.000Z",
        "minified_example": "module a();\n  or b(j, j, j);\nendmodule: a\n",
        "minified_error": null,
        "full_error": "%Error: top.sv:4:6: Wire inputs its own output, creating circular logic (wire x=x)\n  4 | or xiqyjro(j, j, j);\n",
        "full_example": "module ug\n  (input logic vdaev, input wire gl, input int skf, input bit xnyyueprwu);\n\n  or xiqyjro(j, j, j);\n\nendmodule: ug\n\nmodule sifgljh\n  ();\n\n  nand xhuhnk(cuczaubtei, mtqinoh, cuczaubtei);\n  nand rowvzfvz(mtqinoh, mtqinoh, mtqinoh);\n\nendmodule: sifgljh\n"
      }
    ],
    "issue_status": "reported",
    "issue_link": "https://github.com/verilator/verilator/issues/5878"
  },
  {
    "stage": "parsing",
    "tool": "yosys-slang",
    "id": "abort_in_181",
    "title": "Abort in slang_frontend.cc:181",
    "short_desc": null,
    "examples": [
      {
        "id": "abort_in_181_v1",
        "first_found": "2025-07-19T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "ERROR: Abort in /home/runner/work/verilog-model/verilog-model/yosys-slang/src/slang_frontend.cc:181.\n",
        "full_example": "module cxkwwv\n  ( input bit [1:4][3:3] ajjevafj\n  , input uwire logic [0:1][0:2][4:4] mdnyba [1:0][2:1][1:0]\n  , input reg [4:4][3:1] a\n  , input wor logic [4:2][3:0][0:2][3:2] dbmsvpty [4:4]\n  );\n\n\n  or o(ixiwcmrk, fm, ixiwcmrk);\n\n  not jb(crev, yzksybsfoi);\n\n  not kzx(j, a);\n  // warning: implicit conversion of port connection truncates from 3 to 1 bits\n  //   reg [4:4][3:1] a -> logic a\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign yzksybsfoi = 'b1;\n\n  // Multi-driven assigns\nendmodule: cxkwwv\n\nmodule ryz\n  ( output longint yjy\n  , output tri0 logic [0:1] dstgumnmza [1:1]\n  , input supply1 logic pcegsiuj\n  , input shortint yslxoj\n  , input reg lo [4:3]\n  , input bit [2:3][2:0][4:0][4:0] g\n  );\n\n\n  not ytvstdout(numzlvh, ty);\n\n\n  // Top inputs -> top outputs assigns\n  assign yjy = yslxoj;\n\n  // Single-driven assigns\n  assign dstgumnmza = '{'b1};\n  assign ty = 'bx;\n\n  // Multi-driven assigns\n  assign dstgumnmza = '{'bx};\nendmodule: ryz\n\nmodule sjwtqzdhon\n  ( output tri logic [3:3][4:3][4:0] tjy [4:3][3:0]\n  , output supply0 logic [2:2] bns\n  , output reg [2:3][1:4][0:4] woaa\n  , input shortreal ykbw\n  , input wire logic [2:2] yxwp [2:0]\n  );\n\n  reg wzfgspok [4:3];\n  tri0 logic [0:1] swgxe [1:1];\n\n  and mcrpv(bns, bns, nb);\n\n  not q(yjkup, rydi);\n\n  ryz kdstyzceff(.yjy(nb), .dstgumnmza(swgxe), .pcegsiuj(xvv), .yslxoj(uavf), .lo(wzfgspok), .g(uavf));\n  // warning: implicit conversion of port connection truncates from 64 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   longint yjy -> wire logic nb\n  //\n  // warning: implicit conversion of port connection expands from 1 to 16 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic uavf -> shortint yslxoj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 150 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic uavf -> bit [2:3][2:0][4:0][4:0] g\n\n  or exxobc(uavf, uavf, uavf);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\nendmodule: sjwtqzdhon\n\nmodule rf\n  ( output wor logic [1:3][2:0][3:2] twegvdyko\n  , output triand logic [3:2][2:4] yojsgcygvv [2:2][4:0]\n  , input triand logic rknpthau [1:1][4:0][2:1]\n  , input wire logic [4:4] sbije\n  );\n\n  uwire logic [0:1][0:2][4:4] kid [1:0][2:1][1:0];\n  wor logic [4:2][3:0][0:2][3:2] t [4:4];\n  reg qu [4:3];\n  tri0 logic [0:1] frj [1:1];\n\n  cxkwwv vqicrvb(.ajjevafj(jghwrkvun), .mdnyba(kid), .a(wsmc), .dbmsvpty(t));\n  // warning: implicit conversion of port connection expands from 1 to 4 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic jghwrkvun -> bit [1:4][3:3] ajjevafj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 3 bits\n  //   wire logic wsmc -> reg [4:4][3:1] a\n\n  xor yygtdxzzdx(jghwrkvun, wsmc, wsmc);\n\n  ryz rvaapwdg(.yjy(wsmc), .dstgumnmza(frj), .pcegsiuj(wsmc), .yslxoj(jghwrkvun), .lo(qu), .g(kjyhhes));\n  // warning: implicit conversion of port connection truncates from 64 to 1 bits\n  // warning: implicit conversion changes signedness from signed to unsigned\n  // warning: implicit conversion changes possible bit states from 2-state to 4-state\n  //   longint yjy -> wire logic wsmc\n  //\n  // warning: implicit conversion of port connection expands from 1 to 16 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic jghwrkvun -> shortint yslxoj\n  //\n  // warning: implicit conversion of port connection expands from 1 to 150 bits\n  // warning: implicit conversion changes possible bit states from 4-state to 2-state\n  //   wire logic kjyhhes -> bit [2:3][2:0][4:0][4:0] g\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign yojsgcygvv = '{'{'b0,'bx,'b0,'b0,'b1}};\n  assign t = '{'b1};\n  assign kid = '{'{'{'bx,'bx},'{'bz,'bz}},'{'{'bx,'b0},'{'bz,'bz}}};\n  assign qu = '{'bx,'bz};\n  assign twegvdyko = 'b1;\n\n  // Multi-driven assigns\n  assign sbije = 'bz;\n  assign yojsgcygvv = '{'{'b0,'b1,'b0,'bx,'b0}};\n  assign yojsgcygvv = '{'{'b0,'b1,'bx,'b1,'b1}};\n  assign twegvdyko = 'b1;\nendmodule: rf\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  },
  {
    "stage": "parsing",
    "tool": "yosys-slang",
    "id": "feature_unimplemented_see_ast",
    "title": "Real is not supported",
    "short_desc": null,
    "examples": [
      {
        "id": "feature_unimplemented_see_ast_v1",
        "first_found": "2025-07-19T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "Source line generated-modules/67-seed_14137937824704098027_8217928765404351501.sv:100:49:   bnrnmje umywnnmn(.iqhnitgm(pvhnw), .rferwqwnm(ug), .ufjod(jgbhxcfkrz), .lio(pcsnkkc));\nERROR: Feature unimplemented at /home/runner/work/verilog-model/verilog-model/yosys-slang/src/slang_frontend.cc:1379, see AST and code line dump above\n",
        "full_example": "module bnrnmje\n  ( input supply1 logic [2:2][3:3] iqhnitgm [1:4][1:4]\n  , input shortreal rferwqwnm\n  , input trior logic [1:3][2:1] ufjod [1:2][0:1][1:4]\n  , input wand logic lio [2:3][1:1]\n  );\n\n  xor matvodduo(ii, dzzvxtvoz, q);\n\n  and rs(q, fczqu, uzxtrnx);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign uzxtrnx = 'b0;\n  assign dzzvxtvoz = 'bx;\n  assign fczqu = 'bz;\n\n  // Multi-driven assigns\n  assign iqhnitgm = '{'{'b0,'bz,'b1,'bx},'{'bx,'b0,'bz,'bz},'{'b1,'b1,'b1,'bz},'{'bz,'bx,'b0,'b1}};\nendmodule: bnrnmje\n\nmodule nnlfjltlfz\n  ( output bit [3:1] kfamkla\n  , output trior logic [4:1] zccd [2:1][1:2]\n  , input wor logic [3:1][0:1][2:3] tavfl [1:1][0:3]\n  , input tri logic [1:3] pmwcb [0:4][3:4]\n  , input bit [3:0] qhbidas [4:4]\n  , input int lty\n  );\n\n\n  not fautlzt(gdir, kfamkla);\n\n  not grn(kfamkla, kfamkla);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign zccd = '{'{'b1,'b0},'{'bz,'b1}};\n\n  // Multi-driven assigns\n  assign zccd = '{'{'bz,'b0},'{'b1,'b1}};\n  assign gdir = 'bz;\n  assign zccd = '{'{'bz,'b1},'{'b0,'b0}};\nendmodule: nnlfjltlfz\n\nmodule zritqw\n  ( output logic [2:3][4:3][4:4][0:1] ozokmpr\n  , output reg q [1:2]\n  , input time jekm\n  , input tri1 logic [0:4][2:4] urkciltby [4:1][4:0][2:1]\n  , input tri0 logic [0:3][0:2][3:2][0:4] hpugai\n  , input shortreal lbn [4:1]\n  );\n\n\n  and xpsg(fapit, ozokmpr, fapit);\n\n  not krygltfcl(gcaoek, ltfwihxe);\n\n  not mb(ozokmpr, xjfldjhmld);\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n  assign q = '{'b1,'bz};\n  assign ltfwihxe = 'bz;\n  assign xjfldjhmld = 'bx;\n\n  // Multi-driven assigns\n  assign gcaoek = 'bz;\n  assign fapit = 'b1;\n  assign gcaoek = 'b0;\n  assign fapit = 'bx;\nendmodule: zritqw\n\nmodule tnieawpwht\n  ( output wor logic [2:3] hxabz [4:1][2:1][2:2][1:4]\n  , output tri1 logic [1:4][1:1] gdqbmlpjw\n  , output reg [2:0] sbtmfozx\n  , input trior logic [4:1][1:2][0:2] q [4:2][3:3][3:3][0:0]\n  , input logic [2:1][4:1][4:2][4:4] rmdmentb\n  );\n\n  supply1 logic [2:2][3:3] pvhnw [1:4][1:4];\n  trior logic [1:3][2:1] jgbhxcfkrz [1:2][0:1][1:4];\n  wand logic pcsnkkc [2:3][1:1];\n\n  xor iv(dbfecmneec, mut, wksl);\n\n  not jgyjqmtn(ikaiuxfbw, xlkgy);\n\n  bnrnmje umywnnmn(.iqhnitgm(pvhnw), .rferwqwnm(ug), .ufjod(jgbhxcfkrz), .lio(pcsnkkc));\n  // warning: implicit conversion of port connection expands from 1 to 32 bits\n  // warning: implicit conversion changes signedness from unsigned to signed\n  //   wire logic ug -> shortreal rferwqwnm\n\n  xor usdsymi(mut, ikaiuxfbw, rmdmentb);\n  // warning: implicit conversion of port connection truncates from 24 to 1 bits\n  //   logic [2:1][4:1][4:2][4:4] rmdmentb -> logic rmdmentb\n\n\n  // Top inputs -> top outputs assigns\n\n  // Single-driven assigns\n\n  // Multi-driven assigns\n  assign q = '{'{'{'{'b1}}},'{'{'{'b1}}},'{'{'{'bx}}}};\n  assign ikaiuxfbw = 'bz;\nendmodule: tnieawpwht\n"
      }
    ],
    "issue_status": "already_known",
    "issue_link": "https://github.com/povik/yosys-slang/issues/181"
  },
  {
    "stage": "parsing",
    "tool": "zachjs-sv2v",
    "id": "non_vector_type_cannot_have_packed_dimesions",
    "title": "non-vector type real cannot have packed dimesions",
    "short_desc": null,
    "examples": [
      {
        "id": "non_vector_type_real_cannot_have_packed_dimesions",
        "first_found": "2025-05-24T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "sv2v: non-vector type real cannot have packed dimesions:[(2,1)]\nCallStack (from HasCallStack):\n  error, called at src/Language/SystemVerilog/AST/Type.hs:118:14 in main:Language.SystemVerilog.AST.Type\n",
        "full_example": "// Seed: 18347911916735053405,2426731264514140405\n\nmodule zbjft\n  (output real hftsz [2:1], output bit rhqocjml [1:1], output int dyhck);\n\n  xor bauagpzq(mmchqmwvv, ctophjw, vh);\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign vh = 'bx;\n  assign ctophjw = 'b0;\n  assign hftsz = '{'bx,'bx};\n  assign mmchqmwvv = 'b0;\n  assign mmchqmwvv = 'b1;\nendmodule: zbjft\n\nmodule agxj\n  ( output integer uvujoem [1:0]\n  , output wire cgpe [4:1]\n  , output logic pwhnwwmffv [4:3]\n  , output bit [2:1][3:3] w\n  , input real cesmyxprke\n  , input logic [2:3] ajkuhiz\n  , input bit [4:0] yjjdnwp\n  , input uwire ue\n  );\n\n  // Top inputs -> top outputs assigns\n\n  // Assigns\n  assign w = 'b10;\n  assign pwhnwwmffv = '{'b0,'bx};\n  assign uvujoem = '{'b0,'b0};\n  assign cgpe = '{'b0,'b0,'b0,'b0};\nendmodule: agxj\n\n// Seed after: 12155394080032148100,2426731264514140405\n"
      },
      {
        "id": "non_vector_type_realtime_cannot_have_packed_dimesions",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": "sv2v: non-vector type realtime cannot have packed dimesions:[(4,4)]\nCallStack (from HasCallStack):\n  error, called at src/Language/SystemVerilog/AST/Type.hs:118:14 in main:Language.SystemVerilog.AST.Type\n",
        "full_example": "// Seed: 9129291793660916310,5268399088297407135\n\nmodule zgwhybsiiv\n( output logic [1:1] usueqavn [4:1]\n, output reg [4:2][0:4][0:2][1:3] lyfqlxq\n, input bit [0:0][2:1][3:1][4:2] vtyxcj\n, input trior logic [3:0][0:0] tjygbyt [4:3][0:2]\n, input wire logic [1:0][0:0][1:2][0:2] ynujgqck [3:2][4:1]\n, input reg [2:0][4:3] lceto\n);\n\nnot rjfc(lyfqlxq, gqh);\n\n// Top inputs -> top outputs assigns\n// Assigns\n\nendmodule: zgwhybsiiv\n\nmodule vzzxjchd\n( output realtime hznep [4:4]\n, output tri1 logic bpwwh [4:2]\n, input tri1 logic [4:1][2:0][2:4][2:2] otd\n, input reg [4:3][0:1] ahhmip\n, input shortreal uxshnflsk\n);\n\nnot zljnggis(uz, jhto);\n\nxor jymnphi(belkyh, uz, gnbtcgqlh);\n\n// Top inputs -> top outputs assigns\n\n// Assigns\n\nendmodule: vzzxjchd\n\nmodule q\n( output bit [3:1][4:0][4:3][4:2] woypymshv\n, output realtime ufq [0:1]\n, output shortreal ezbnsrmxs\n, input tri0 logic [3:1][0:2][0:0] pxzh [3:4][4:0][4:0][2:3]\n);\n\nxor jlzskmccyv(woypymshv, xtdapw, p);\n\n// Top inputs -> top outputs assigns\n\n// Assigns\n\nendmodule: q\n\n// Seed after: 5729559856547299097,5268399088297407135\n"
      },
      {
        "id": "non_vector_type_time_cannot_have_packed_dimesions",
        "first_found": "2025-06-01T00:00:00.000Z",
        "minified_example": null,
        "minified_error": null,
        "full_error": null,
        "full_example": "// Seed: 16701481279964727923,5268399088297407135\n\nmodule ajkegxt\n(output realtime de, output logic [0:2][2:0][2:1] izt, input tri1 logic drz, input tri0 logic rg [1:4][4:1]);\n\nnot qybfgnj(de, ugzdmq);\nxor dan(izt, de, izt);\n\n// Top inputs -> top outputs assigns\n// Assigns\n\nendmodule: ajkegxt\n\nmodule hpiyt\n( output bit [4:2] vvbwpzicm\n, input shortreal fjnlpmw\n, input reg z [4:3][3:4]\n, input time asvvfehav [2:4][2:1]\n, input trireg logic jco\n);\n\n// Top inputs -> top outputs assigns\n// Assigns\n\nendmodule: hpiyt\n\n// Seed after: 8858891727543941605,5268399088297407135\n"
      }
    ],
    "issue_status": null,
    "issue_link": null
  }
];
