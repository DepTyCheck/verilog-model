stage: synthesis
tool: verilator
id: array_initialization_should_have_been_removed_earlier
title: Array initialization should have been removed earlier
regex: >
  Array initialization should have been removed earlier
issue_novelty: unsupported
issue_link: https://github.com/verilator/verilator/issues/6254
examples:
  - array_initialization_should_have_been_removed_earlier_v1:
      first_found: 07.07.2025
      minified_error: |
        %Error: Internal Error: test.sv:2:14: ../V3Slice.cpp:316: Array initialization should have been removed earlier
            2 |   assign b = '{'{'b0,'bx}};
      minified_example: |
        module a (output triand logic b [3:3][1:2]);
          assign b = '{'{'b0,'bx}};
          assign b = '{'{'bx,'bx}};
        endmodule: a
      full_error: |
        %Error: Internal Error: top.sv:20:14: ../V3Slice.cpp:316: Array initialization should have been removed earlier
      full_example: |
        module htlcim
          (output triand logic g [3:3][1:2], output logic [1:4] zksvacmlv, output reg [2:3][2:1][4:4] pb);

          and retsvgumxk(zksvacmlv, vbkonmvke, vbkonmvke);

          xor tzfgmhfdi(vbkonmvke, vqxtghdfa, bahed);

          or tkehq(nxoxzhxcp, vbkonmvke, nxoxzhxcp);

          // Top inputs -> top outputs assigns

          // Single-driven assigns
          assign pb = 'bx;
          assign vqxtghdfa = 'b0;
          assign bahed = 'bx;
          assign g = '{'{'b0,'bx}};

          // Multi-driven assigns
          assign g = '{'{'bx,'bx}};
          assign g = '{'{'b0,'b0}};
        endmodule: htlcim

        module j
          ( output bit [0:0] fwtd [0:0]
          , output uwire logic [4:1][1:1][4:1] snzxazx [0:1][4:2]
          , output shortint rrj
          , input reg [1:1][1:2] ymqvoispex
          , input logic wbnbqckbgo [4:3]
          , input reg naa [3:4]
          );

          not tflzftcu(snhgmy, spafcoxmp);

          not zrezvwoanv(epp, udzuga);

          not cr(spafcoxmp, efpz);

          and sjusbng(udzuga, epp, u);

          // Top inputs -> top outputs assigns

          // Single-driven assigns
          assign rrj = 'b0;

          // Multi-driven assigns
        endmodule: j
