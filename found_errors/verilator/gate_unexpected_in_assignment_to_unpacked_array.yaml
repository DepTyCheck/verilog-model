stage: syntesis
tool: verilator
id: gate_unexpected_in_assignment_to_unpacked_array
title: gate unexpected in assignment to unpacked array
regex: >
  (AND|NOT|OR) unexpected in assignment to unpacked array
examples:
  - not_unexpected_in_assignment_to_unpacked_array:
      first_found: 05.07.2025
      full_error: |
        %Error: top.sv:24:54: NOT unexpected in assignment to unpacked array
      full_example: |
        module wdl
          (input int fj, input logic bjxfutvv, input tri logic [2:3][0:0][3:3] gxcjfjpz [0:2][2:2]);


          not an(q, cr);

          xor f(dnrqc, selpqlr, bbjipwyu);

          nand kwjjxqwba(rl, h, panjciu);


          // Top inputs -> top outputs assigns

          // Single-driven assigns
          assign panjciu = 'b1;
          assign h = 'b0;

          // Multi-driven assigns
        endmodule: wdl

        module runcm
          (output realtime ciibqxaqy [0:4], input tri1 logic uyjodx [3:2][1:1]);


          nand pywaqtf(xxqwxcq, kt, pfm);

          and yyqpkew(fgrdbgubmt, kt, g);

          or wgum(g, kt, xmslx);

          xor hfd(kt, mjaatnxz, kt);


          // Top inputs -> top outputs assigns

          // Single-driven assigns

          // Multi-driven assigns
          assign fgrdbgubmt = 'bz;
          assign kt = 'bz;
          assign g = 'b1;
          assign kt = 'b1;
        endmodule: runcm

        module ypkunntc
          (input reg [1:2][4:0][1:0] oioyzi);


          not ujzqwd(qx, qx);


          // Top inputs -> top outputs assigns

          // Single-driven assigns

          // Multi-driven assigns
          assign qx = 'bz;
          assign qx = 'bx;
        endmodule: ypkunntc

  - and_unexpected_in_assignment_to_unpacked_array:
      first_found: 05.07.2025
      full_error: |
        AND unexpected in assignment to unpacked array
      full_example: |
        module m
          ( output real wjrmtukg
          , output tri0 logic [4:3][1:0] hsyin
          , output realtime ycsudbts [1:3]
          , output triand logic lzd [1:4]
          , input bit [4:0][2:3][0:3][1:1] k
          , input reg [0:4][0:1][3:3][2:2] zeoerjmp
          );


          xor wexyagyq(nyxn, nyxn, zeoerjmp);
          // warning: implicit conversion of port connection truncates from 10 to 1 bits
          //   reg [0:4][0:1][3:3][2:2] zeoerjmp -> logic zeoerjmp


          // Top inputs -> top outputs assigns
          assign hsyin = zeoerjmp;

          // Single-driven assigns
          assign lzd = '{'bx,'b1,'bx,'bx};
          assign ycsudbts = '{'b1,'bx,'b1};
          assign wjrmtukg = 'bz;

          // Multi-driven assigns
          assign lzd = '{'b1,'b1,'b1,'b0};
          assign lzd = '{'b1,'b0,'b1,'bx};
          assign lzd = '{'b1,'bx,'b0,'b1};
        endmodule: m

  - or_unexpected_in_assignment_to_unpacked_array:
      first_found: 18.07.2025
      full_error: |
        %Error: top.sv:28:20: OR unexpected in assignment to unpacked array
      full_example: |
        module sxdacremp
          ( output wor logic [3:4][1:3][4:1] gcnyqckkj [1:1]
          , output real bvpvzwlmit
          , input logic [0:1][3:1][1:4] rrlwjumtw
          , input bit [3:2][3:2][3:4][4:2] vmvq
          , input byte ilepf [4:0]
          );

          not jid(cnwpa, s);

          and hqjsbvpfme(aujsjlk, sgphzw, txjdiwe);

          nand sawiduvruu(s, pygpwestgo, zbrwcqoe);

          or hihikcy(sgphzw, knszzvhnma, iiu);

          // Top inputs -> top outputs assigns

          // Single-driven assigns
          assign bvpvzwlmit = 'bx;

          // Multi-driven assigns
          assign sgphzw = 'b0;
          assign gcnyqckkj = '{'b0};
          assign gcnyqckkj = '{'b1};
          assign sgphzw = 'b0;
        endmodule: sxdacremp
