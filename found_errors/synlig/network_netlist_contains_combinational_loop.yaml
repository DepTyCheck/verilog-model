stage: analysis
tool: synlig
id: network_netlist_contains_combinational_loop
title: >
  Network contains combinational loop!
regex: >
  Can't open ABC output file `.*output\.blif'\.
examples:
  - network_netlist_contains_combinational_loop_v1:
      first_found: 20.08.2025
      minified_example: |
        module a(output logic [1:0] w1);
          not gate1(w1, w2);
          xor gate2(w2, w2, w1);
        endmodule: a
      minified_error: |
        ERROR: Can't open ABC output file `/tmp/yosys-abc-ZMzIe2/output.blif'.
      full_error: >
        ERROR: Can't open ABC output file `/tmp/yosys-abc-fsYypF/output.blif'.
      full_example: |
        module ezgctmd
          ( output wire logic [2:3][3:0][3:1] oopb [4:0][1:1][1:2]
          , output time sb [1:1][1:1]
          , input reg [0:1] zh [2:4][0:4]
          , input reg [1:1][4:2] othmxgobj [1:1]
          );

          nand dlephwb(uefj, lhr, lhr);
          or wuqhn(dzwwsaa, klqbcdau, lhr);
          not swejnjen(zhatvad, e);
          nand pkqm(lhr, yhattp, hcwpzvj);

          // Single-driven assigns
          assign oopb = '{'{'{'bz,'b0}},'{'{'b1,'bz}},'{'{'bx,'b0}},'{'{'b0,'b1}},'{'{'b1,'b1}}};
          assign klqbcdau = 'b0;
          assign e = 'bx;

          // Multi-driven assigns
          assign oopb = '{'{'{'b0,'bx}},'{'{'b0,'bz}},'{'{'bz,'bx}},'{'{'b0,'bz}},'{'{'bz,'bx}}};
          assign oopb = '{'{'{'bz,'bz}},'{'{'bx,'bx}},'{'{'bx,'bz}},'{'{'bz,'bz}},'{'{'b1,'b1}}};
          assign zhatvad = 'bz;
          assign oopb = '{'{'{'b0,'b0}},'{'{'b0,'b1}},'{'{'bx,'bz}},'{'{'bz,'b1}},'{'{'b1,'bx}}};
        endmodule: ezgctmd

        module otxitxwfv
          ( output logic [1:0] xcjmvr
          , output logic [0:3][3:3][1:4][3:3] yxc
          , output supply1 logic [3:3][0:2][3:0][1:0] xmvdl [2:2][1:3]
          , input triand logic [1:3][3:0] mdsonii [2:0][0:3][0:4][3:2]
          );

          not bdwj(xcjmvr, tcizgyrb);
          not wzxhmqju(yxc, tcizgyrb);
          xor gq(tcizgyrb, tcizgyrb, xcjmvr);

        endmodule: otxitxwfv
